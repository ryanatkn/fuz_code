import type {Gen} from '@ryanatkn/gro';
import {readFileSync} from 'node:fs';
import {join} from 'node:path';

// TODO source of truth
const languages = ['json', 'html', 'css', 'ts', 'svelte'];

export const gen: Gen = ({origin_path}) => {
	const samples: Record<string, string> = {};

	for (const lang of languages) {
		const filePath = join('src/lib/samples', `sample.${lang}`);
		const content = readFileSync(filePath, 'utf-8');
		samples[lang] = escape_string(content);
	}

	const banner = `// generated by ${origin_path} - DO NOT EDIT OR RISK LOST DATA`;

	return `${banner}

		export const samples = {
			css: \`${samples.css}\`,
			html: \`${samples.html}\`,
			json: \`${samples.json}\`,
			svelte: \`${samples.svelte}\`,
			ts: \`${samples.ts}\`,
		};

		${banner}
	`;
};

const escape_string = (str: string): string => {
	return str.replace(/\\/g, '\\\\').replace(/`/g, '\\`').replace(/\${/g, '\\${');
};
