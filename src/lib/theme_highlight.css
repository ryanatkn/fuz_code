/*
 * CSS Custom Highlight API theme for DOM Styler tokens
 * Maps DOM styler token types to highlight colors
 * Uses the same color scheme as theme.css
 */

/* Comments and documentation */
::highlight(comment),
::highlight(prolog),
::highlight(doctype),
::highlight(cdata) {
	color: var(--text_color_5);
}

/* Punctuation and operators */
::highlight(punctuation),
::highlight(attr_equals) {
	color: var(--text_color_5);
}

/* Namespaces */
::highlight(namespace) {
	color: var(--color_d_5);
}

/* Properties, tags, constants */
::highlight(property),
::highlight(tag),
::highlight(constant),
::highlight(symbol),
::highlight(deleted) {
	color: var(--color_a_5);
}

/* Numbers */
::highlight(number) {
	color: var(--color_e_5);
}

/* Booleans */
::highlight(boolean) {
	color: var(--color_i_5);
}

/* Strings and values */
::highlight(selector),
::highlight(string),
::highlight(attr_value),
::highlight(char),
::highlight(builtin),
::highlight(inserted) {
	color: var(--color_b_5);
}

/* Keywords and special values */
::highlight(atrule),
::highlight(attr_name),
::highlight(keyword),
::highlight(null) {
	color: var(--color_f_5);
}

/* Functions and classes */
::highlight(function),
::highlight(class_name) {
	color: var(--color_d_5);
}

/* Regular expressions and variables */
::highlight(regex),
::highlight(important),
::highlight(variable) {
	color: var(--color_e_5);
}

/* Font weight modifiers */
::highlight(important),
::highlight(bold) {
	font-weight: bold;
}

/* Font style modifiers */
::highlight(italic) {
	font-style: italic;
}

/* Language-specific tokens that DOM styler generates */

/* TypeScript/JavaScript specific */
::highlight(template_string) {
	color: var(--color_b_5);
}

::highlight(template_punctuation) {
	color: var(--color_a_5);
}

::highlight(parameter) {
	color: var(--color_a_5);
}

::highlight(operator) {
	color: var(--text_color_5);
}

/* CSS specific */
::highlight(color),
::highlight(hexcode) {
	color: var(--color_e_5);
}

::highlight(unit) {
	color: var(--color_e_5);
}

::highlight(url) {
	color: var(--color_b_5);
}

/* HTML/XML specific */
::highlight(entity) {
	color: var(--color_e_5);
}

::highlight(attr) {
	color: var(--color_f_5);
}

/* JSON specific */
::highlight(property_string) {
	color: var(--color_a_5);
}

/* Additional token types with underscore separators (DOM styler conventions) */
::highlight(class-name) {
	color: var(--color_d_5);
}

::highlight(function-variable) {
	color: var(--color_d_5);
}

::highlight(attr-name) {
	color: var(--color_f_5);
}

::highlight(attr-value) {
	color: var(--color_b_5);
}

::highlight(attr-equals) {
	color: var(--text_color_5);
}

::highlight(template-string) {
	color: var(--color_b_5);
}

::highlight(template-punctuation) {
	color: var(--color_a_5);
}

::highlight(property-string) {
	color: var(--color_a_5);
}
