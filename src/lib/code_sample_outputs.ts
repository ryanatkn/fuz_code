export const styled_json_code =
	'<span class="token punctuation">{</span>\n\t<span class="token property">"string"</span><span class="token operator">:</span> <span class="token string">"a string"</span><span class="token punctuation">,</span>\n\t<span class="token property">"number"</span><span class="token operator">:</span> <span class="token number">12345</span><span class="token punctuation">,</span>\n\t<span class="token property">"boolean"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n\t<span class="token property">"null"</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>\n\t<span class="token property">"object"</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n\t\t<span class="token property">"array"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">"b"</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">]</span>\n\t<span class="token punctuation">}</span> <span class="token comment">// comments :D</span>\n<span class="token punctuation">}</span>';

export const styled_html_code =
	'<span class="token doctype">&lt;!DOCTYPE html></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr_name">class</span><span class="token attr_value"><span class="token punctuation attr_equals">=</span><span class="token punctuation">"</span>test<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\t<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>hello world!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr_name">class</span><span class="token attr_value"><span class="token punctuation attr_equals">=</span><span class="token punctuation">"</span>some_class dash-class<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\tsome <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr_name">class</span><span class="token attr_value"><span class="token punctuation attr_equals">=</span><span class="token punctuation">"</span>a b c<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>text<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr_name">type</span><span class="token attr_value"><span class="token punctuation attr_equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr_name">disabled</span><span class="token punctuation">></span></span>\n\tclick me\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n\n<span class="token comment">&lt;!-- comment &lt;div>a&lt;br /> b&lt;/div> --></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span> <span class="token punctuation">/></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr_name">src</span><span class="token attr_value"><span class="token punctuation attr_equals">=</span><span class="token punctuation">"</span>image.jpg<span class="token punctuation">"</span></span> <span class="token attr_name">alt</span><span class="token attr_value"><span class="token punctuation attr_equals">=</span><span class="token punctuation">"</span>access<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>\n\t<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>list item 1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>\n\t<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>list item 2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr_name">type</span><span class="token attr_value"><span class="token punctuation attr_equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token lang_js">\n\t<span class="token keyword">const</span> ok <span class="token operator">=</span> <span class="token string">\'yes\'</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr_name">type</span><span class="token attr_value"><span class="token punctuation attr_equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style"><span class="token lang_css">\n\t<span class="token selector">.special::before</span> <span class="token punctuation">{</span>\n\t\t<span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">"&lt; &amp; >"</span><span class="token punctuation">;</span>\n\t<span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>\n\n<span class="token cdata">&lt;![CDATA[\n\tif (a &lt; 0) alert("b");\n\t&lt;not-a-tag>\n]]></span>';

export const styled_css_code =
	'<span class="token selector">.some_class</span> <span class="token punctuation">{</span>\n\t<span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.dash-class</span> <span class="token punctuation">{</span>\n\t<span class="token property">font-size</span><span class="token punctuation">:</span> 16px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">p</span> <span class="token punctuation">{</span>\n\t<span class="token property">box-shadow</span><span class="token punctuation">:</span> 0 0 10px <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0.1<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">/* comment */</span>\n\n<span class="token comment">/*\nmulti\nline\n\n&lt;comment>\n\n*/</span>\n\n<span class="token selector">#unique_id</span> <span class="token punctuation">{</span>\n\t<span class="token property">background-color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">div > p</span> <span class="token punctuation">{</span>\n\t<span class="token property">margin</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token atrule"><span class="token rule">@media</span> <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span> 600px<span class="token punctuation">)</span></span> <span class="token punctuation">{</span>\n\t<span class="token selector">body</span> <span class="token punctuation">{</span>\n\t\t<span class="token property">background-color</span><span class="token punctuation">:</span> lightblue<span class="token punctuation">;</span>\n\t<span class="token punctuation">}</span>\n<span class="token punctuation">}</span>';

export const styled_ts_code =
	'<span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> b <span class="token operator">=</span> <span class="token string">\'b\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> c <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">type</span> <span class="token class_name">Some_Type</span> <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">|</span> <span class="token string">\'b\'</span> <span class="token operator">|</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class_name"><span class="token constant">D</span></span> <span class="token punctuation">{</span>\n\td1<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=</span> <span class="token string">\'d\'</span><span class="token punctuation">;</span>\n\td2<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>\n\td3 <span class="token operator">=</span> <span class="token function">$state</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n\t<span class="token function">constructor</span><span class="token punctuation">(</span>d2<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t\t<span class="token keyword">this</span><span class="token punctuation">.</span>d2 <span class="token operator">=</span> d2<span class="token punctuation">;</span>\n\t<span class="token punctuation">}</span>\n\n\t<span class="token function">class_method</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>\n\t\t<span class="token keyword">return</span> <span class="token template_string"><span class="token template_punctuation string">`</span><span class="token string">Hello, </span><span class="token interpolation"><span class="token interpolation_punctuation punctuation">${</span><span class="token keyword">this</span><span class="token punctuation">.</span>d1<span class="token interpolation_punctuation punctuation">}</span></span><span class="token template_punctuation string">`</span></span><span class="token punctuation">;</span>\n\t<span class="token punctuation">}</span>\n\n\t<span class="token function_variable function">instance_method</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span> <span class="token comment">/* ... */</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n\t<span class="token function">#private_method</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t\t<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class_name">Error</span><span class="token punctuation">(</span><span class="token template_string"><span class="token template_punctuation string">`</span><span class="token interpolation"><span class="token interpolation_punctuation punctuation">${</span><span class="token keyword">this</span><span class="token punctuation">.</span>d1<span class="token interpolation_punctuation punctuation">}</span></span><span class="token string"> etc</span><span class="token template_punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token punctuation">}</span>\n\n\t<span class="token keyword">protected</span> <span class="token function">protected_method</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t\t<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class_name">RegExp</span><span class="token punctuation">(</span><span class="token string">\'protected\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// comment</span>\n\n<span class="token comment">/*\nother comment\n\nconst comment = false;\n*/</span>\n\n<span class="token comment">/**\n * JSDoc comment\n */</span>\n\n<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class_name">Some_E</span> <span class="token punctuation">{</span>\n\tname<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n\tage<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">const</span> some_e<span class="token operator">:</span> Some_E <span class="token operator">=</span> <span class="token punctuation">{</span>name<span class="token operator">:</span> <span class="token string">\'A. H.\'</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">add</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">{</span>\n\t<span class="token keyword">return</span> x <span class="token operator">+</span> y<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">const</span> plus <span class="token operator">=</span> <span class="token punctuation">(</span>a<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span> b<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">any</span> <span class="token operator">=></span> a <span class="token operator">+</span> b<span class="token punctuation">;</span>';

export const styled_svelte_code =
	'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr_name">lang</span><span class="token attr_value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ts<span class="token punctuation">"</span></span> <span class="token attr_name">module</span><span class="token punctuation">></span></span><span class="token script"><span class="token lang_ts">\n\t<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">HELLO</span> <span class="token operator">=</span> <span class="token string">\'world\'</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr_name">lang</span><span class="token attr_value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ts<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token lang_ts">\n\t<span class="token keyword">import</span> Thing <span class="token keyword">from</span> <span class="token string">\'$lib/Thing.svelte\'</span><span class="token punctuation">;</span>\n\n\t<span class="token keyword">interface</span> <span class="token class_name">Props</span> <span class="token punctuation">{</span>\n\t\tthing<span class="token operator">:</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">any</span><span class="token operator">></span><span class="token punctuation">;</span>\n\t<span class="token punctuation">}</span>\n\t\n\t<span class="token keyword">const</span> <span class="token punctuation">{</span>thing<span class="token punctuation">}</span><span class="token operator">:</span> Props <span class="token operator">=</span> <span class="token function">$props</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n\t<span class="token keyword">const</span> thing_keys <span class="token operator">=</span> <span class="token function">$derived</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>thing<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n\t<span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n\t\n\t<span class="token keyword">const</span> b <span class="token operator">=</span> <span class="token string">\'b\'</span><span class="token punctuation">;</span>\n\t\n\t<span class="token keyword">const</span> c <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n\t\n\t<span class="token keyword">export</span> <span class="token keyword">type</span> <span class="token class_name">Some_Type</span> <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">|</span> <span class="token string">\'b\'</span> <span class="token operator">|</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n\t\n\t<span class="token keyword">class</span> <span class="token class_name"><span class="token constant">D</span></span> <span class="token punctuation">{</span>\n\t\td1<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=</span> <span class="token string">\'d\'</span><span class="token punctuation">;</span>\n\t\td2<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>\n\t\td3 <span class="token operator">=</span> <span class="token function">$state</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\n\t\t<span class="token function">constructor</span><span class="token punctuation">(</span>d2<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t\t\t<span class="token keyword">this</span><span class="token punctuation">.</span>d2 <span class="token operator">=</span> d2<span class="token punctuation">;</span>\n\t\t<span class="token punctuation">}</span>\n\t\n\t\t<span class="token function">class_method</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>\n\t\t\t<span class="token keyword">return</span> <span class="token template_string"><span class="token template_punctuation string">`</span><span class="token string">Hello, </span><span class="token interpolation"><span class="token interpolation_punctuation punctuation">${</span><span class="token keyword">this</span><span class="token punctuation">.</span>d1<span class="token interpolation_punctuation punctuation">}</span></span><span class="token template_punctuation string">`</span></span><span class="token punctuation">;</span>\n\t\t<span class="token punctuation">}</span>\n\t\n\t\t<span class="token function_variable function">instance_method</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span> <span class="token comment">/* ... */</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\t\n\t\t<span class="token function">#private_method</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t\t\t<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class_name">Error</span><span class="token punctuation">(</span><span class="token template_string"><span class="token template_punctuation string">`</span><span class="token interpolation"><span class="token interpolation_punctuation punctuation">${</span><span class="token keyword">this</span><span class="token punctuation">.</span>d1<span class="token interpolation_punctuation punctuation">}</span></span><span class="token string"> etc</span><span class="token template_punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\t<span class="token punctuation">}</span>\n\t\n\t\t<span class="token keyword">protected</span> <span class="token function">protected_method</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t\t\t<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class_name">RegExp</span><span class="token punctuation">(</span><span class="token string">\'protected\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\t<span class="token punctuation">}</span>\n\t<span class="token punctuation">}</span>\n\t\n\t<span class="token comment">// comment</span>\n\t\n\t<span class="token comment">/*\n\tother comment\n\t\n\tconst comment = false;\n\t*/</span>\n\t\n\t<span class="token comment">/**\n\t * JSDoc comment\n\t */</span>\n\t\n\t<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class_name">Some_E</span> <span class="token punctuation">{</span>\n\t\tname<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n\t\tage<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>\n\t<span class="token punctuation">}</span>\n\t\n\t<span class="token keyword">export</span> <span class="token keyword">const</span> some_e<span class="token operator">:</span> Some_E <span class="token operator">=</span> <span class="token punctuation">{</span>name<span class="token operator">:</span> <span class="token string">\'A. H.\'</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n\t\n\t<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">add</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">{</span>\n\t\t<span class="token keyword">return</span> x <span class="token operator">+</span> y<span class="token punctuation">;</span>\n\t<span class="token punctuation">}</span>\n\t\n\t<span class="token keyword">export</span> <span class="token keyword">const</span> plus <span class="token operator">=</span> <span class="token punctuation">(</span>a<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span> b<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">any</span> <span class="token operator">=></span> a <span class="token operator">+</span> b<span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>hello <span class="token lang_ts"><span class="token punctuation">{</span><span class="token constant">HELLO</span><span class="token punctuation">}</span></span>!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>\n\n<span class="token each"><span class="token punctuation">{</span><span class="token keyword">#each</span> <span class="token lang_ts">thing_keys </span><span class="token keyword">as</span> <span class="token lang_ts">key </span><span class="token lang_ts"><span class="token punctuation">(</span>key<span class="token punctuation">)</span></span><span class="token punctuation">}</span></span>\n\t<span class="token lang_ts"><span class="token punctuation">{</span>@<span class="token keyword">const</span> value <span class="token operator">=</span> thing<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">}</span></span>\n\t<span class="token lang_ts"><span class="token punctuation">{</span>value<span class="token punctuation">}</span></span>\n<span class="token each"><span class="token punctuation">{</span><span class="token keyword">/each</span><span class="token punctuation">}</span></span>\n\n<span class="token lang_ts"><span class="token punctuation">{</span>#<span class="token keyword">if</span> <span class="token boolean">true</span><span class="token punctuation">}</span></span>\n\t<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Thing</span> <span class="token attr_name">string_prop</span><span class="token attr_value"><span class="token punctuation">=</span><span class="token punctuation">"</span>a<span class="token punctuation">"</span></span> <span class="token attr_name">number_prop=</span><span class="token lang_ts"><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n<span class="token lang_ts"><span class="token punctuation">{</span><span class="token operator">:</span><span class="token keyword">else</span><span class="token punctuation">}</span></span>\n\t<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Thing</span> <span class="token attr_name">string_prop</span><span class="token attr_value"><span class="token punctuation">=</span><span class="token punctuation">"</span>b<span class="token punctuation">"</span></span> <span class="token attr_name">number_prop=</span><span class="token lang_ts"><span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n\t\t<span class="token lang_ts"><span class="token punctuation">{</span><span class="token decorator"><span class="token at operator">@</span><span class="token function">render</span></span> <span class="token function">children</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>\n\t<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Thing</span><span class="token punctuation">></span></span>\n<span class="token lang_ts"><span class="token punctuation">{</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token punctuation">}</span></span>\n\n<span class="token doctype">&lt;!DOCTYPE html></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr_name">class</span><span class="token attr_value"><span class="token punctuation">=</span><span class="token punctuation">"</span>test<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\t<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>hello world!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr_name">class</span><span class="token attr_value"><span class="token punctuation">=</span><span class="token punctuation">"</span>some_class dash-class<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\tsome <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr_name">class</span><span class="token attr_value"><span class="token punctuation">=</span><span class="token punctuation">"</span>a b c<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>text<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr_name">type</span><span class="token attr_value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr_name">disabled</span><span class="token punctuation">></span></span>\n\tclick me\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n\n<span class="token comment">&lt;!-- comment &lt;div>a&lt;br /> b&lt;/div> --></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span> <span class="token punctuation">/></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr_name">src</span><span class="token attr_value"><span class="token punctuation">=</span><span class="token punctuation">"</span>image.jpg<span class="token punctuation">"</span></span> <span class="token attr_name">alt</span><span class="token attr_value"><span class="token punctuation">=</span><span class="token punctuation">"</span>access<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>\n\t<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>list item 1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>\n\t<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>list item 2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr_name">type</span><span class="token attr_value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token lang_ts">\n\t<span class="token keyword">const</span> ok <span class="token operator">=</span> <span class="token string">\'yes\'</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr_name">type</span><span class="token attr_value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style"><span class="token lang_css">\n\t<span class="token selector">.special::before</span> <span class="token punctuation">{</span>\n\t\t<span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">"&lt; &amp; >"</span><span class="token punctuation">;</span>\n\t<span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>\n\n<span class="token cdata">&lt;![CDATA[\n\tif (a &lt; 0) alert("b");\n\t&lt;not-a-tag>\n]]></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token lang_css">\n\t<span class="token selector">.some_class</span> <span class="token punctuation">{</span>\n\t\t<span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>\n\t<span class="token punctuation">}</span>\n\t\n\t<span class="token selector">.dash-class</span> <span class="token punctuation">{</span>\n\t\t<span class="token property">font-size</span><span class="token punctuation">:</span> 16px<span class="token punctuation">;</span>\n\t<span class="token punctuation">}</span>\n\t\n\t<span class="token selector">p</span> <span class="token punctuation">{</span>\n\t\t<span class="token property">box-shadow</span><span class="token punctuation">:</span> 0 0 10px <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0.1<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token punctuation">}</span>\n\t\n\t<span class="token comment">/* comment */</span>\n\t\n\t<span class="token comment">/*\n\tmulti\n\tline\n\t\n\t&lt;comment>\n\t\n\t*/</span>\n\t\n\t<span class="token selector">#unique_id</span> <span class="token punctuation">{</span>\n\t\t<span class="token property">background-color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>\n\t<span class="token punctuation">}</span>\n\t\n\t<span class="token selector">div > p</span> <span class="token punctuation">{</span>\n\t\t<span class="token property">margin</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>\n\t<span class="token punctuation">}</span>\n\t\n\t<span class="token atrule"><span class="token rule">@media</span> <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span> 600px<span class="token punctuation">)</span></span> <span class="token punctuation">{</span>\n\t\t<span class="token selector">body</span> <span class="token punctuation">{</span>\n\t\t\t<span class="token property">background-color</span><span class="token punctuation">:</span> lightblue<span class="token punctuation">;</span>\n\t\t<span class="token punctuation">}</span>\n\t<span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>';
