=== STATS ===
Sample length: 2168 characters
Total tokens: 624

Token types (32 unique):
  punctuation: 295
  tag: 74
  operator: 38
  lang_ts: 25
  svelte_expression: 24
  function: 22
  attr_name: 19
  keyword: 19
  special_keyword: 13
  string: 11
  attr_value: 10
  capitalized_identifier: 8
  builtin: 8
  property: 8
  selector: 7
  block: 6
  comment: 5
  number: 5
  at_directive: 5
  script: 3
  namespace: 3
  constant: 2
  boolean: 2
  function_variable: 2
  style: 2
  lang_css: 2
  type_annotation: 1
  :: 1
  type: 1
  each: 1
  atrule: 1
  rule: 1

=== TOKENS ===
   0-25    tag                       <script lang="ts" module>
   0-7     tag                       <script
   0-1     punctuation               <
   8-12    attr_name                 lang
  12-17    attr_value                ="ts"
  12-13    punctuation               =
  13-14    punctuation               "
  16-17    punctuation               "
  18-24    attr_name                 module
  24-25    punctuation               >
  25-57    script                    \n\texport const HELLO = 'world';\n
  25-57    lang_ts                   \n\texport const HELLO = 'world';\n
  27-33    special_keyword           export
  34-39    keyword                   const
  40-45    constant                  HELLO
  46-47    operator                  =
  48-55    string                    'world'
  55-56    punctuation               ;
  57-66    tag                       </script>
  57-65    tag                       </script
  57-59    punctuation               </
  65-66    punctuation               >
  68-86    tag                       <script lang="ts">
  68-75    tag                       <script
  68-69    punctuation               <
  76-80    attr_name                 lang
  80-85    attr_value                ="ts"
  80-81    punctuation               =
  81-82    punctuation               "
  84-85    punctuation               "
  85-86    punctuation               >
  86-680   script                    \n\t// @ts-expect-error\n\timport Thing from '$lib/Thing.svelte';\n\timport type {Snippet} from 'svelte';\n\n\tconst {\n\t\tthing,\n\t\tbound = $bindable(true),\n\t\tchildren,\n\t\tonclick,\n\t}: {\n\t\tthing: Record<string, any>;\n\t\tbound?: boolean;\n\t\tchildren: Snippet;\n\t\tonclick?: () => void;\n\t} = $props();\n\n\tconst thing_keys = $derived(Object.entries(thing));\n\n\tconst a = 1;\n\n\tconst b = 'b';\n\n\tlet c: boolean = $state(true);\n\n\tconst f = (p: any) => p;\n\n\tconst attachment = (_p1: string, _p2: number) => (el: HTMLElement) => {\n\t\telement_ref !== el;\n\t};\n\n\tlet value = $state(thing['']);\n\tlet element_ref: HTMLElement;\n
  86-680   lang_ts                   \n\t// @ts-expect-error\n\timport Thing from '$lib/Thing.svelte';\n\timport type {Snippet} from 'svelte';\n\n\tconst {\n\t\tthing,\n\t\tbound = $bindable(true),\n\t\tchildren,\n\t\tonclick,\n\t}: {\n\t\tthing: Record<string, any>;\n\t\tbound?: boolean;\n\t\tchildren: Snippet;\n\t\tonclick?: () => void;\n\t} = $props();\n\n\tconst thing_keys = $derived(Object.entries(thing));\n\n\tconst a = 1;\n\n\tconst b = 'b';\n\n\tlet c: boolean = $state(true);\n\n\tconst f = (p: any) => p;\n\n\tconst attachment = (_p1: string, _p2: number) => (el: HTMLElement) => {\n\t\telement_ref !== el;\n\t};\n\n\tlet value = $state(thing['']);\n\tlet element_ref: HTMLElement;\n
  88-107   comment                   // @ts-expect-error
 109-115   special_keyword           import
 116-121   capitalized_identifier    Thing
 122-126   special_keyword           from
 127-146   string                    '$lib/Thing.svelte'
 146-147   punctuation               ;
 149-155   special_keyword           import
 156-160   keyword                   type
 161-162   punctuation               {
 162-169   capitalized_identifier    Snippet
 169-170   punctuation               }
 171-175   special_keyword           from
 176-184   string                    'svelte'
 184-185   punctuation               ;
 188-193   keyword                   const
 194-195   punctuation               {
 203-204   punctuation               ,
 213-214   operator                  =
 215-224   function                  $bindable
 224-225   punctuation               (
 225-229   boolean                   true
 229-230   punctuation               )
 230-231   punctuation               ,
 242-243   punctuation               ,
 253-254   punctuation               ,
 256-257   punctuation               }
 257-258   operator                  :
 259-260   punctuation               {
 268-269   operator                  :
 270-276   capitalized_identifier    Record
 276-277   operator                  <
 277-283   builtin                   string
 283-284   punctuation               ,
 285-288   builtin                   any
 288-289   operator                  >
 289-290   punctuation               ;
 298-299   operator                  ?
 299-300   operator                  :
 301-308   builtin                   boolean
 308-309   punctuation               ;
 320-321   operator                  :
 322-329   capitalized_identifier    Snippet
 329-330   punctuation               ;
 340-341   operator                  ?
 341-342   operator                  :
 343-344   punctuation               (
 344-345   punctuation               )
 346-348   operator                  =>
 349-353   keyword                   void
 353-354   punctuation               ;
 356-357   punctuation               }
 358-359   operator                  =
 360-366   function                  $props
 366-367   punctuation               (
 367-368   punctuation               )
 368-369   punctuation               ;
 372-377   keyword                   const
 389-390   operator                  =
 391-399   function                  $derived
 399-400   punctuation               (
 400-406   capitalized_identifier    Object
 406-407   punctuation               .
 407-414   function                  entries
 414-415   punctuation               (
 420-421   punctuation               )
 421-422   punctuation               )
 422-423   punctuation               ;
 426-431   keyword                   const
 434-435   operator                  =
 436-437   number                    1
 437-438   punctuation               ;
 441-446   keyword                   const
 449-450   operator                  =
 451-454   string                    'b'
 454-455   punctuation               ;
 458-461   keyword                   let
 463-473   type_annotation           : boolean 
 463-464   :                         :
 464-473   type                       boolean 
 465-472   builtin                   boolean
 473-474   operator                  =
 475-481   function                  $state
 481-482   punctuation               (
 482-486   boolean                   true
 486-487   punctuation               )
 487-488   punctuation               ;
 491-496   keyword                   const
 497-498   function_variable         f
 499-500   operator                  =
 501-502   punctuation               (
 503-504   operator                  :
 505-508   builtin                   any
 508-509   punctuation               )
 510-512   operator                  =>
 514-515   punctuation               ;
 518-523   keyword                   const
 524-534   function_variable         attachment
 535-536   operator                  =
 537-538   punctuation               (
 541-542   operator                  :
 543-549   builtin                   string
 549-550   punctuation               ,
 554-555   operator                  :
 556-562   builtin                   number
 562-563   punctuation               )
 564-566   operator                  =>
 567-568   punctuation               (
 570-571   operator                  :
 572-583   capitalized_identifier    HTMLElement
 583-584   punctuation               )
 585-587   operator                  =>
 588-589   punctuation               {
 604-607   operator                  !==
 610-611   punctuation               ;
 613-614   punctuation               }
 614-615   punctuation               ;
 618-621   keyword                   let
 628-629   operator                  =
 630-636   function                  $state
 636-637   punctuation               (
 642-643   punctuation               [
 643-645   string                    ''
 645-646   punctuation               ]
 646-647   punctuation               )
 647-648   punctuation               ;
 650-653   keyword                   let
 665-666   operator                  :
 667-678   capitalized_identifier    HTMLElement
 678-679   punctuation               ;
 680-689   tag                       </script>
 680-688   tag                       </script
 680-682   punctuation               </
 688-689   punctuation               >
 691-719   tag                       <h1 bind:this={element_ref}>
 691-694   tag                       <h1
 691-692   punctuation               <
 695-705   attr_name                 bind:this=
 695-700   namespace                 bind:
 705-718   svelte_expression         {element_ref}
 705-706   punctuation               {
 706-717   lang_ts                   element_ref
 717-718   punctuation               }
 718-719   punctuation               >
 725-732   svelte_expression         {HELLO}
 725-726   punctuation               {
 726-731   lang_ts                   HELLO
 726-731   constant                  HELLO
 731-732   punctuation               }
 733-738   tag                       </h1>
 733-737   tag                       </h1
 733-735   punctuation               </
 737-738   punctuation               >
 740-782   svelte_expression         {#each thing_keys as [k, { t, u }] (f(k))}
 740-782   each                      {#each thing_keys as [k, { t, u }] (f(k))}
 740-741   punctuation               {
 741-746   special_keyword           #each
 758-760   keyword                   as
 761-777   lang_ts                   [k, { t, u }] (f
 761-762   punctuation               [
 763-764   punctuation               ,
 765-766   punctuation               {
 768-769   punctuation               ,
 772-773   punctuation               }
 773-774   punctuation               ]
 775-776   punctuation               (
 777-781   lang_ts                   (k))
 777-778   punctuation               (
 779-780   punctuation               )
 780-781   punctuation               )
 781-782   punctuation               }
 784-820   svelte_expression         {@const v = Math.round(t[k + f(u)])}
 784-820   at_directive              {@const v = Math.round(t[k + f(u)])}
 784-785   punctuation               {
 785-791   keyword                   @const
 792-820   lang_ts                   v = Math.round(t[k + f(u)])}
 794-795   operator                  =
 796-800   capitalized_identifier    Math
 800-801   punctuation               .
 801-806   function                  round
 806-807   punctuation               (
 808-809   punctuation               [
 811-812   operator                  +
 813-814   function                  f
 814-815   punctuation               (
 816-817   punctuation               )
 817-818   punctuation               ]
 818-819   punctuation               )
 819-820   punctuation               }
 822-828   svelte_expression         {f(v)}
 822-823   punctuation               {
 823-827   lang_ts                   f(v)
 823-824   function                  f
 824-825   punctuation               (
 826-827   punctuation               )
 827-828   punctuation               }
 829-836   svelte_expression         {/each}
 829-836   block                     {/each}
 829-830   punctuation               {
 830-835   special_keyword           /each
 835-836   punctuation               }
 838-848   svelte_expression         {#if f(c)}
 838-848   block                     {#if f(c)}
 838-839   punctuation               {
 839-842   special_keyword           #if
 842-847   lang_ts                    f(c)
 843-844   function                  f
 844-845   punctuation               (
 846-847   punctuation               )
 847-848   punctuation               }
 850-905   tag                       <Thing string_prop="a {f('s')} b" number_prop={f(1)} />
 850-856   tag                       <Thing
 850-851   punctuation               <
 857-871   attr_name                 string_prop="a
 872-880   svelte_expression         {f('s')}
 872-873   punctuation               {
 873-879   lang_ts                   f('s')
 873-874   function                  f
 874-875   punctuation               (
 875-878   string                    's'
 878-879   punctuation               )
 879-880   punctuation               }
 881-883   attr_name                 b"
 884-896   attr_name                 number_prop=
 896-902   svelte_expression         {f(1)}
 896-897   punctuation               {
 897-901   lang_ts                   f(1)
 897-898   function                  f
 898-899   punctuation               (
 899-900   number                    1
 900-901   punctuation               )
 901-902   punctuation               }
 903-905   punctuation               />
 906-925   svelte_expression         {:else if f(a > 0)}
 906-925   block                     {:else if f(a > 0)}
 906-907   punctuation               {
 907-915   special_keyword           :else if
 915-924   lang_ts                    f(a > 0)
 916-917   function                  f
 917-918   punctuation               (
 920-921   operator                  >
 922-923   number                    0
 923-924   punctuation               )
 924-925   punctuation               }
 934-941   svelte_expression         {:else}
 934-935   punctuation               {
 935-940   lang_ts                   :else
 935-936   operator                  :
 936-940   special_keyword           else
 940-941   punctuation               }
 943-994   tag                       <Thing string_prop="b" onthing={() => (c = f(!c))}>
 943-949   tag                       <Thing
 943-944   punctuation               <
 950-961   attr_name                 string_prop
 961-965   attr_value                ="b"
 961-962   punctuation               =
 962-963   punctuation               "
 964-965   punctuation               "
 966-974   attr_name                 onthing=
 974-993   svelte_expression         {() => (c = f(!c))}
 974-975   punctuation               {
 975-992   lang_ts                   () => (c = f(!c))
 975-976   punctuation               (
 976-977   punctuation               )
 978-980   operator                  =>
 981-982   punctuation               (
 984-985   operator                  =
 986-987   function                  f
 987-988   punctuation               (
 988-989   operator                  !
 990-991   punctuation               )
 991-992   punctuation               )
 992-993   punctuation               }
 993-994   punctuation               >
 997-1017  svelte_expression         {@render children()}
 997-1017  at_directive              {@render children()}
 997-998   punctuation               {
 998-1005  keyword                   @render
1006-1017  lang_ts                   children()}
1006-1014  function                  children
1014-1015  punctuation               (
1015-1016  punctuation               )
1016-1017  punctuation               }
1019-1027  tag                       </Thing>
1019-1026  tag                       </Thing
1019-1021  punctuation               </
1026-1027  punctuation               >
1028-1033  svelte_expression         {/if}
1028-1033  block                     {/if}
1028-1029  punctuation               {
1029-1032  special_keyword           /if
1032-1033  punctuation               }
1035-1070  svelte_expression         {@html '<strong>raw html</strong>'}
1035-1070  at_directive              {@html '<strong>raw html</strong>'}
1035-1036  punctuation               {
1036-1041  keyword                   @html
1042-1070  lang_ts                   '<strong>raw html</strong>'}
1042-1069  string                    '<strong>raw html</strong>'
1069-1070  punctuation               }
1072-1121  tag                       <input bind:value type="text" class:active={c} />
1072-1078  tag                       <input
1072-1073  punctuation               <
1079-1089  attr_name                 bind:value
1079-1084  namespace                 bind:
1090-1094  attr_name                 type
1094-1101  attr_value                ="text"
1094-1095  punctuation               =
1095-1096  punctuation               "
1100-1101  punctuation               "
1102-1115  attr_name                 class:active=
1102-1108  namespace                 class:
1115-1118  svelte_expression         {c}
1115-1116  punctuation               {
1116-1117  lang_ts                   c
1117-1118  punctuation               }
1119-1121  punctuation               />
1123-1166  tag                       <span {@attach attachment('param', f(42))}>
1123-1128  tag                       <span
1123-1124  punctuation               <
1129-1165  svelte_expression         {@attach attachment('param', f(42))}
1129-1165  at_directive              {@attach attachment('param', f(42))}
1129-1130  punctuation               {
1130-1137  keyword                   @attach
1138-1165  lang_ts                   attachment('param', f(42))}
1138-1148  function                  attachment
1148-1149  punctuation               (
1149-1156  string                    'param'
1156-1157  punctuation               ,
1158-1159  function                  f
1159-1160  punctuation               (
1160-1162  number                    42
1162-1163  punctuation               )
1163-1164  punctuation               )
1164-1165  punctuation               }
1165-1166  punctuation               >
1169-1176  tag                       </span>
1169-1175  tag                       </span
1169-1171  punctuation               </
1175-1176  punctuation               >
1178-1203  svelte_expression         {@render my_snippet('p')}
1178-1203  at_directive              {@render my_snippet('p')}
1178-1179  punctuation               {
1179-1186  keyword                   @render
1187-1203  lang_ts                   my_snippet('p')}
1187-1197  function                  my_snippet
1197-1198  punctuation               (
1198-1201  string                    'p'
1201-1202  punctuation               )
1202-1203  punctuation               }
1205-1237  svelte_expression         {#snippet my_snippet(p: string)}
1205-1237  block                     {#snippet my_snippet(p: string)}
1205-1206  punctuation               {
1206-1214  special_keyword           #snippet
1214-1236  lang_ts                    my_snippet(p: string)
1215-1225  function                  my_snippet
1225-1226  punctuation               (
1227-1228  operator                  :
1229-1235  builtin                   string
1235-1236  punctuation               )
1236-1237  punctuation               }
1239-1257  tag                       <button {onclick}>
1239-1246  tag                       <button
1239-1240  punctuation               <
1247-1256  svelte_expression         {onclick}
1247-1248  punctuation               {
1248-1255  lang_ts                   onclick
1255-1256  punctuation               }
1256-1257  punctuation               >
1257-1260  svelte_expression         {p}
1257-1258  punctuation               {
1258-1259  lang_ts                   p
1259-1260  punctuation               }
1260-1269  tag                       </button>
1260-1268  tag                       </button
1260-1262  punctuation               </
1268-1269  punctuation               >
1270-1280  svelte_expression         {/snippet}
1270-1280  block                     {/snippet}
1270-1271  punctuation               {
1271-1279  special_keyword           /snippet
1279-1280  punctuation               }
1282-1331  tag                       <p class="some_class hypen-class" id="unique_id">
1282-1284  tag                       <p
1282-1283  punctuation               <
1285-1290  attr_name                 class
1290-1315  attr_value                ="some_class hypen-class"
1290-1291  punctuation               =
1291-1292  punctuation               "
1314-1315  punctuation               "
1316-1318  attr_name                 id
1318-1330  attr_value                ="unique_id"
1318-1319  punctuation               =
1319-1320  punctuation               "
1329-1330  punctuation               "
1330-1331  punctuation               >
1338-1358  tag                       <span class="a b c">
1338-1343  tag                       <span
1338-1339  punctuation               <
1344-1349  attr_name                 class
1349-1357  attr_value                ="a b c"
1349-1350  punctuation               =
1350-1351  punctuation               "
1356-1357  punctuation               "
1357-1358  punctuation               >
1362-1369  tag                       </span>
1362-1368  tag                       </span
1362-1364  punctuation               </
1368-1369  punctuation               >
1370-1374  tag                       </p>
1370-1373  tag                       </p
1370-1372  punctuation               </
1373-1374  punctuation               >
1376-1407  tag                       <button type="button" disabled>
1376-1383  tag                       <button
1376-1377  punctuation               <
1384-1388  attr_name                 type
1388-1397  attr_value                ="button"
1388-1389  punctuation               =
1389-1390  punctuation               "
1396-1397  punctuation               "
1398-1406  attr_name                 disabled
1406-1407  punctuation               >
1417-1426  tag                       </button>
1417-1425  tag                       </button
1417-1419  punctuation               </
1425-1426  punctuation               >
1428-1467  comment                   <!-- comment <div>a<br /> {b}</div> -->
1468-1481  svelte_expression         {b.repeat(2)}
1468-1469  punctuation               {
1469-1480  lang_ts                   b.repeat(2)
1470-1471  punctuation               .
1471-1477  function                  repeat
1477-1478  punctuation               (
1478-1479  number                    2
1479-1480  punctuation               )
1480-1481  punctuation               }
1482-1489  svelte_expression         {bound}
1482-1483  punctuation               {
1483-1488  lang_ts                   bound
1488-1489  punctuation               }
1491-1497  tag                       <br />
1491-1494  tag                       <br
1491-1492  punctuation               <
1495-1497  punctuation               />
1499-1505  tag                       <hr />
1499-1502  tag                       <hr
1499-1500  punctuation               <
1503-1505  punctuation               />
1507-1543  tag                       <img src="image.jpg" alt="access" />
1507-1511  tag                       <img
1507-1508  punctuation               <
1512-1515  attr_name                 src
1515-1527  attr_value                ="image.jpg"
1515-1516  punctuation               =
1516-1517  punctuation               "
1526-1527  punctuation               "
1528-1531  attr_name                 alt
1531-1540  attr_value                ="access"
1531-1532  punctuation               =
1532-1533  punctuation               "
1539-1540  punctuation               "
1541-1543  punctuation               />
1545-1549  tag                       <ul>
1545-1548  tag                       <ul
1545-1546  punctuation               <
1548-1549  punctuation               >
1551-1555  tag                       <li>
1551-1554  tag                       <li
1551-1552  punctuation               <
1554-1555  punctuation               >
1566-1571  tag                       </li>
1566-1570  tag                       </li
1566-1568  punctuation               </
1570-1571  punctuation               >
1573-1577  tag                       <li>
1573-1576  tag                       <li
1573-1574  punctuation               <
1576-1577  punctuation               >
1588-1593  tag                       </li>
1588-1592  tag                       </li
1588-1590  punctuation               </
1592-1593  punctuation               >
1594-1599  tag                       </ul>
1594-1598  tag                       </ul
1594-1596  punctuation               </
1598-1599  punctuation               >
1601-1644  comment                   <!-- embedded tags for boundary testing -->
1645-1650  tag                       <div>
1645-1649  tag                       <div
1645-1646  punctuation               <
1649-1650  punctuation               >
1652-1660  tag                       <script>
1652-1659  tag                       <script
1652-1653  punctuation               <
1659-1660  punctuation               >
1660-1698  script                    \n\t\tconst inline_js = 'no lang attr';\n\t
1660-1698  lang_ts                   \n\t\tconst inline_js = 'no lang attr';\n\t
1663-1668  keyword                   const
1679-1680  operator                  =
1681-1695  string                    'no lang attr'
1695-1696  punctuation               ;
1698-1707  tag                       </script>
1698-1706  tag                       </script
1698-1700  punctuation               </
1706-1707  punctuation               >
1709-1716  tag                       <style>
1709-1715  tag                       <style
1709-1710  punctuation               <
1715-1716  punctuation               >
1716-1750  style                     \n\t\t.inline {\n\t\t\tcolor: blue;\n\t\t}\n\t
1716-1750  lang_css                  \n\t\t.inline {\n\t\t\tcolor: blue;\n\t\t}\n\t
1719-1726  selector                  .inline
1727-1728  punctuation               {
1732-1737  property                  color
1737-1738  punctuation               :
1743-1744  punctuation               ;
1747-1748  punctuation               }
1750-1758  tag                       </style>
1750-1757  tag                       </style
1750-1752  punctuation               </
1757-1758  punctuation               >
1759-1765  tag                       </div>
1759-1764  tag                       </div
1759-1761  punctuation               </
1764-1765  punctuation               >
1767-1774  tag                       <style>
1767-1773  tag                       <style
1767-1768  punctuation               <
1773-1774  punctuation               >
1774-2159  style                     \n\t.some_class {\n\t\tcolor: red;\n\t}\n\n\t.hypen-class {\n\t\tfont-size: 16px;\n\t}\n\n\tp {\n\t\tbox-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n\t}\n\n\t/* comment */\n\n\t/*\n\tmulti\n\tline\n\n\t<comment>\n\n\t*/\n\n\t#unique_id {\n\t\tbackground-color: blue;\n\t}\n\n\t@media (max-width: 600px) {\n\t\t:global(body) {\n\t\t\tbackground-color: light-dark(lightblue, darkblue);\n\t\t}\n\t}\n\n\t:global(.escapehatch)::before {\n\t\tcontent: '< & >';\n\t}\n
1774-2159  lang_css                  \n\t.some_class {\n\t\tcolor: red;\n\t}\n\n\t.hypen-class {\n\t\tfont-size: 16px;\n\t}\n\n\tp {\n\t\tbox-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n\t}\n\n\t/* comment */\n\n\t/*\n\tmulti\n\tline\n\n\t<comment>\n\n\t*/\n\n\t#unique_id {\n\t\tbackground-color: blue;\n\t}\n\n\t@media (max-width: 600px) {\n\t\t:global(body) {\n\t\t\tbackground-color: light-dark(lightblue, darkblue);\n\t\t}\n\t}\n\n\t:global(.escapehatch)::before {\n\t\tcontent: '< & >';\n\t}\n
1776-1787  selector                  .some_class
1788-1789  punctuation               {
1792-1797  property                  color
1797-1798  punctuation               :
1802-1803  punctuation               ;
1805-1806  punctuation               }
1809-1821  selector                  .hypen-class
1822-1823  punctuation               {
1826-1835  property                  font-size
1835-1836  punctuation               :
1841-1842  punctuation               ;
1844-1845  punctuation               }
1848-1849  selector                  p
1850-1851  punctuation               {
1854-1864  property                  box-shadow
1864-1865  punctuation               :
1875-1879  function                  rgba
1879-1880  punctuation               (
1881-1882  punctuation               ,
1884-1885  punctuation               ,
1887-1888  punctuation               ,
1892-1893  punctuation               )
1893-1894  punctuation               ;
1896-1897  punctuation               }
1900-1913  comment                   /* comment */
1916-1948  comment                   /*\n\tmulti\n\tline\n\n\t<comment>\n\n\t*/
1951-1961  selector                  #unique_id
1962-1963  punctuation               {
1966-1982  property                  background-color
1982-1983  punctuation               :
1988-1989  punctuation               ;
1991-1992  punctuation               }
1995-2020  atrule                    @media (max-width: 600px)
1995-2001  rule                      @media
2002-2003  punctuation               (
2003-2012  property                  max-width
2012-2013  punctuation               :
2019-2020  punctuation               )
2021-2022  punctuation               {
2025-2038  selector                  :global(body)
2039-2040  punctuation               {
2044-2060  property                  background-color
2060-2061  punctuation               :
2062-2072  function                  light-dark
2072-2073  punctuation               (
2082-2083  punctuation               ,
2092-2093  punctuation               )
2093-2094  punctuation               ;
2097-2098  punctuation               }
2100-2101  punctuation               }
2104-2133  selector                  :global(.escapehatch)::before
2134-2135  punctuation               {
2138-2145  property                  content
2145-2146  punctuation               :
2147-2154  string                    '< & >'
2154-2155  punctuation               ;
2157-2158  punctuation               }
2159-2167  tag                       </style>
2159-2166  tag                       </style
2159-2161  punctuation               </
2166-2167  punctuation               >
