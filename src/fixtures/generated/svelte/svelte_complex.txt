=== STATS ===
Sample length: 2249 characters
Total tokens: 631

Token types (32 unique):
  punctuation: 298
  tag: 74
  operator: 37
  svelte_expression: 24
  lang_ts: 23
  function: 23
  attr_name: 20
  keyword: 19
  special_keyword: 14
  attr_value: 11
  string: 11
  builtin: 9
  capitalized_identifier: 8
  property: 8
  block: 7
  selector: 7
  comment: 6
  number: 5
  at_directive: 5
  script: 3
  namespace: 3
  constant: 2
  boolean: 2
  function_variable: 2
  style: 2
  lang_css: 2
  type_annotation: 1
  :: 1
  type: 1
  each: 1
  atrule: 1
  rule: 1

=== TOKENS ===
   0-25    tag                       <script lang="ts" module>
   0-7     tag                       <script
   0-1     punctuation               <
   8-12    attr_name                 lang
  12-17    attr_value                ="ts"
  12-13    punctuation               =
  13-14    punctuation               "
  16-17    punctuation               "
  18-24    attr_name                 module
  24-25    punctuation               >
  25-57    script                    \n\texport const HELLO = 'world';\n
  25-57    lang_ts                   \n\texport const HELLO = 'world';\n
  27-33    special_keyword           export
  34-39    keyword                   const
  40-45    constant                  HELLO
  46-47    operator                  =
  48-55    string                    'world'
  55-56    punctuation               ;
  57-66    tag                       </script>
  57-65    tag                       </script
  57-59    punctuation               </
  65-66    punctuation               >
  68-86    tag                       <script lang="ts">
  68-75    tag                       <script
  68-69    punctuation               <
  76-80    attr_name                 lang
  80-85    attr_value                ="ts"
  80-81    punctuation               =
  81-82    punctuation               "
  84-85    punctuation               "
  85-86    punctuation               >
  86-690   script                    \n\t// @ts-expect-error\n\timport Thing from '$lib/Thing.svelte';\n\timport type {Snippet} from 'svelte';\n\n\tconst {\n\t\tthing,\n\t\tbound = $bindable(true),\n\t\tchildren,\n\t\tonclick,\n\t}: {\n\t\tthing: Record<string, any>;\n\t\tbound?: boolean;\n\t\tchildren: Snippet;\n\t\tonclick?: () => void;\n\t} = $props();\n\n\tconst thing_keys = $derived(Object.entries(thing));\n\n\tconst a = 1 as number;\n\n\tconst b = 'b';\n\n\tlet c: boolean = $state(true);\n\n\tconst f = (p: any) => p;\n\n\tconst attachment = (_p1: string, _p2: number) => (el: HTMLElement) => {\n\t\telement_ref !== el;\n\t};\n\n\tlet value = $state(thing['']);\n\tlet element_ref: HTMLElement;\n
  86-690   lang_ts                   \n\t// @ts-expect-error\n\timport Thing from '$lib/Thing.svelte';\n\timport type {Snippet} from 'svelte';\n\n\tconst {\n\t\tthing,\n\t\tbound = $bindable(true),\n\t\tchildren,\n\t\tonclick,\n\t}: {\n\t\tthing: Record<string, any>;\n\t\tbound?: boolean;\n\t\tchildren: Snippet;\n\t\tonclick?: () => void;\n\t} = $props();\n\n\tconst thing_keys = $derived(Object.entries(thing));\n\n\tconst a = 1 as number;\n\n\tconst b = 'b';\n\n\tlet c: boolean = $state(true);\n\n\tconst f = (p: any) => p;\n\n\tconst attachment = (_p1: string, _p2: number) => (el: HTMLElement) => {\n\t\telement_ref !== el;\n\t};\n\n\tlet value = $state(thing['']);\n\tlet element_ref: HTMLElement;\n
  88-107   comment                   // @ts-expect-error
 109-115   special_keyword           import
 116-121   capitalized_identifier    Thing
 122-126   special_keyword           from
 127-146   string                    '$lib/Thing.svelte'
 146-147   punctuation               ;
 149-155   special_keyword           import
 156-160   keyword                   type
 161-162   punctuation               {
 162-169   capitalized_identifier    Snippet
 169-170   punctuation               }
 171-175   special_keyword           from
 176-184   string                    'svelte'
 184-185   punctuation               ;
 188-193   keyword                   const
 194-195   punctuation               {
 203-204   punctuation               ,
 213-214   operator                  =
 215-224   function                  $bindable
 224-225   punctuation               (
 225-229   boolean                   true
 229-230   punctuation               )
 230-231   punctuation               ,
 242-243   punctuation               ,
 253-254   punctuation               ,
 256-257   punctuation               }
 257-258   operator                  :
 259-260   punctuation               {
 268-269   operator                  :
 270-276   capitalized_identifier    Record
 276-277   operator                  <
 277-283   builtin                   string
 283-284   punctuation               ,
 285-288   builtin                   any
 288-289   operator                  >
 289-290   punctuation               ;
 298-299   operator                  ?
 299-300   operator                  :
 301-308   builtin                   boolean
 308-309   punctuation               ;
 320-321   operator                  :
 322-329   capitalized_identifier    Snippet
 329-330   punctuation               ;
 340-341   operator                  ?
 341-342   operator                  :
 343-344   punctuation               (
 344-345   punctuation               )
 346-348   operator                  =>
 349-353   keyword                   void
 353-354   punctuation               ;
 356-357   punctuation               }
 358-359   operator                  =
 360-366   function                  $props
 366-367   punctuation               (
 367-368   punctuation               )
 368-369   punctuation               ;
 372-377   keyword                   const
 389-390   operator                  =
 391-399   function                  $derived
 399-400   punctuation               (
 400-406   capitalized_identifier    Object
 406-407   punctuation               .
 407-414   function                  entries
 414-415   punctuation               (
 420-421   punctuation               )
 421-422   punctuation               )
 422-423   punctuation               ;
 426-431   keyword                   const
 434-435   operator                  =
 436-437   number                    1
 438-440   special_keyword           as
 441-447   builtin                   number
 447-448   punctuation               ;
 451-456   keyword                   const
 459-460   operator                  =
 461-464   string                    'b'
 464-465   punctuation               ;
 468-471   keyword                   let
 473-483   type_annotation           : boolean 
 473-474   :                         :
 474-483   type                       boolean 
 475-482   builtin                   boolean
 483-484   operator                  =
 485-491   function                  $state
 491-492   punctuation               (
 492-496   boolean                   true
 496-497   punctuation               )
 497-498   punctuation               ;
 501-506   keyword                   const
 507-508   function_variable         f
 509-510   operator                  =
 511-512   punctuation               (
 513-514   operator                  :
 515-518   builtin                   any
 518-519   punctuation               )
 520-522   operator                  =>
 524-525   punctuation               ;
 528-533   keyword                   const
 534-544   function_variable         attachment
 545-546   operator                  =
 547-548   punctuation               (
 551-552   operator                  :
 553-559   builtin                   string
 559-560   punctuation               ,
 564-565   operator                  :
 566-572   builtin                   number
 572-573   punctuation               )
 574-576   operator                  =>
 577-578   punctuation               (
 580-581   operator                  :
 582-593   capitalized_identifier    HTMLElement
 593-594   punctuation               )
 595-597   operator                  =>
 598-599   punctuation               {
 614-617   operator                  !==
 620-621   punctuation               ;
 623-624   punctuation               }
 624-625   punctuation               ;
 628-631   keyword                   let
 638-639   operator                  =
 640-646   function                  $state
 646-647   punctuation               (
 652-653   punctuation               [
 653-655   string                    ''
 655-656   punctuation               ]
 656-657   punctuation               )
 657-658   punctuation               ;
 660-663   keyword                   let
 675-676   operator                  :
 677-688   capitalized_identifier    HTMLElement
 688-689   punctuation               ;
 690-699   tag                       </script>
 690-698   tag                       </script
 690-692   punctuation               </
 698-699   punctuation               >
 701-729   tag                       <h1 bind:this={element_ref}>
 701-704   tag                       <h1
 701-702   punctuation               <
 705-715   attr_name                 bind:this=
 705-710   namespace                 bind:
 715-728   svelte_expression         {element_ref}
 715-716   punctuation               {
 716-727   lang_ts                   element_ref
 727-728   punctuation               }
 728-729   punctuation               >
 735-742   svelte_expression         {HELLO}
 735-736   punctuation               {
 736-741   lang_ts                   HELLO
 736-741   constant                  HELLO
 741-742   punctuation               }
 743-748   tag                       </h1>
 743-747   tag                       </h1
 743-745   punctuation               </
 747-748   punctuation               >
 750-792   svelte_expression         {#each thing_keys as [k, { t, u }] (f(k))}
 750-792   each                      {#each thing_keys as [k, { t, u }] (f(k))}
 750-751   punctuation               {
 751-756   special_keyword           #each
 768-770   keyword                   as
 771-792   lang_ts                   [k, { t, u }] (f(k))}
 771-772   punctuation               [
 773-774   punctuation               ,
 775-776   punctuation               {
 778-779   punctuation               ,
 782-783   punctuation               }
 783-784   punctuation               ]
 785-786   punctuation               (
 786-787   function                  f
 787-788   punctuation               (
 789-790   punctuation               )
 790-791   punctuation               )
 791-792   punctuation               }
 794-830   svelte_expression         {@const v = Math.round(t[k + f(u)])}
 794-830   at_directive              {@const v = Math.round(t[k + f(u)])}
 794-795   punctuation               {
 795-801   keyword                   @const
 802-830   lang_ts                   v = Math.round(t[k + f(u)])}
 804-805   operator                  =
 806-810   capitalized_identifier    Math
 810-811   punctuation               .
 811-816   function                  round
 816-817   punctuation               (
 818-819   punctuation               [
 821-822   operator                  +
 823-824   function                  f
 824-825   punctuation               (
 826-827   punctuation               )
 827-828   punctuation               ]
 828-829   punctuation               )
 829-830   punctuation               }
 832-838   svelte_expression         {f(v)}
 832-833   punctuation               {
 833-837   lang_ts                   f(v)
 833-834   function                  f
 834-835   punctuation               (
 836-837   punctuation               )
 837-838   punctuation               }
 839-846   svelte_expression         {/each}
 839-846   block                     {/each}
 839-840   punctuation               {
 840-845   special_keyword           /each
 845-846   punctuation               }
 848-858   svelte_expression         {#if f(c)}
 848-858   block                     {#if f(c)}
 848-849   punctuation               {
 849-852   special_keyword           #if
 852-857   lang_ts                    f(c)
 853-854   function                  f
 854-855   punctuation               (
 856-857   punctuation               )
 857-858   punctuation               }
 860-915   tag                       <Thing string_prop="a {f('s')} b" number_prop={f(1)} />
 860-866   tag                       <Thing
 860-861   punctuation               <
 867-881   attr_name                 string_prop="a
 882-890   svelte_expression         {f('s')}
 882-883   punctuation               {
 883-889   lang_ts                   f('s')
 883-884   function                  f
 884-885   punctuation               (
 885-888   string                    's'
 888-889   punctuation               )
 889-890   punctuation               }
 891-893   attr_name                 b"
 894-906   attr_name                 number_prop=
 906-912   svelte_expression         {f(1)}
 906-907   punctuation               {
 907-911   lang_ts                   f(1)
 907-908   function                  f
 908-909   punctuation               (
 909-910   number                    1
 910-911   punctuation               )
 911-912   punctuation               }
 913-915   punctuation               />
 916-935   svelte_expression         {:else if f(a > 0)}
 916-935   block                     {:else if f(a > 0)}
 916-917   punctuation               {
 917-925   special_keyword           :else if
 925-934   lang_ts                    f(a > 0)
 926-927   function                  f
 927-928   punctuation               (
 930-931   operator                  >
 932-933   number                    0
 933-934   punctuation               )
 934-935   punctuation               }
 944-951   svelte_expression         {:else}
 944-951   block                     {:else}
 944-945   punctuation               {
 945-950   special_keyword           :else
 950-951   punctuation               }
 953-1004  tag                       <Thing string_prop="b" onthing={() => (c = f(!c))}>
 953-959   tag                       <Thing
 953-954   punctuation               <
 960-971   attr_name                 string_prop
 971-975   attr_value                ="b"
 971-972   punctuation               =
 972-973   punctuation               "
 974-975   punctuation               "
 976-984   attr_name                 onthing=
 984-1003  svelte_expression         {() => (c = f(!c))}
 984-985   punctuation               {
 985-1002  lang_ts                   () => (c = f(!c))
 985-986   punctuation               (
 986-987   punctuation               )
 988-990   operator                  =>
 991-992   punctuation               (
 994-995   operator                  =
 996-997   function                  f
 997-998   punctuation               (
 998-999   operator                  !
1000-1001  punctuation               )
1001-1002  punctuation               )
1002-1003  punctuation               }
1003-1004  punctuation               >
1007-1027  svelte_expression         {@render children()}
1007-1027  at_directive              {@render children()}
1007-1008  punctuation               {
1008-1015  keyword                   @render
1016-1027  lang_ts                   children()}
1016-1024  function                  children
1024-1025  punctuation               (
1025-1026  punctuation               )
1026-1027  punctuation               }
1029-1037  tag                       </Thing>
1029-1036  tag                       </Thing
1029-1031  punctuation               </
1036-1037  punctuation               >
1038-1043  svelte_expression         {/if}
1038-1043  block                     {/if}
1038-1039  punctuation               {
1039-1042  special_keyword           /if
1042-1043  punctuation               }
1045-1101  comment                   <!-- eslint-disable-next-line svelte/no-at-html-tags -->
1102-1137  svelte_expression         {@html '<strong>raw html</strong>'}
1102-1137  at_directive              {@html '<strong>raw html</strong>'}
1102-1103  punctuation               {
1103-1108  keyword                   @html
1109-1137  lang_ts                   '<strong>raw html</strong>'}
1109-1136  string                    '<strong>raw html</strong>'
1136-1137  punctuation               }
1139-1188  tag                       <input bind:value type="text" class:active={c} />
1139-1145  tag                       <input
1139-1140  punctuation               <
1146-1156  attr_name                 bind:value
1146-1151  namespace                 bind:
1157-1161  attr_name                 type
1161-1168  attr_value                ="text"
1161-1162  punctuation               =
1162-1163  punctuation               "
1167-1168  punctuation               "
1169-1182  attr_name                 class:active=
1169-1175  namespace                 class:
1182-1185  svelte_expression         {c}
1182-1183  punctuation               {
1183-1184  lang_ts                   c
1184-1185  punctuation               }
1186-1188  punctuation               />
1190-1233  tag                       <span {@attach attachment('param', f(42))}>
1190-1195  tag                       <span
1190-1191  punctuation               <
1196-1232  svelte_expression         {@attach attachment('param', f(42))}
1196-1232  at_directive              {@attach attachment('param', f(42))}
1196-1197  punctuation               {
1197-1204  keyword                   @attach
1205-1232  lang_ts                   attachment('param', f(42))}
1205-1215  function                  attachment
1215-1216  punctuation               (
1216-1223  string                    'param'
1223-1224  punctuation               ,
1225-1226  function                  f
1226-1227  punctuation               (
1227-1229  number                    42
1229-1230  punctuation               )
1230-1231  punctuation               )
1231-1232  punctuation               }
1232-1233  punctuation               >
1236-1243  tag                       </span>
1236-1242  tag                       </span
1236-1238  punctuation               </
1242-1243  punctuation               >
1245-1270  svelte_expression         {@render my_snippet('p')}
1245-1270  at_directive              {@render my_snippet('p')}
1245-1246  punctuation               {
1246-1253  keyword                   @render
1254-1270  lang_ts                   my_snippet('p')}
1254-1264  function                  my_snippet
1264-1265  punctuation               (
1265-1268  string                    'p'
1268-1269  punctuation               )
1269-1270  punctuation               }
1272-1304  svelte_expression         {#snippet my_snippet(p: string)}
1272-1304  block                     {#snippet my_snippet(p: string)}
1272-1273  punctuation               {
1273-1281  special_keyword           #snippet
1281-1303  lang_ts                    my_snippet(p: string)
1282-1292  function                  my_snippet
1292-1293  punctuation               (
1294-1295  operator                  :
1296-1302  builtin                   string
1302-1303  punctuation               )
1303-1304  punctuation               }
1306-1338  tag                       <button type="button" {onclick}>
1306-1313  tag                       <button
1306-1307  punctuation               <
1314-1318  attr_name                 type
1318-1327  attr_value                ="button"
1318-1319  punctuation               =
1319-1320  punctuation               "
1326-1327  punctuation               "
1328-1337  svelte_expression         {onclick}
1328-1329  punctuation               {
1329-1336  lang_ts                   onclick
1336-1337  punctuation               }
1337-1338  punctuation               >
1338-1341  svelte_expression         {p}
1338-1339  punctuation               {
1339-1340  lang_ts                   p
1340-1341  punctuation               }
1341-1350  tag                       </button>
1341-1349  tag                       </button
1341-1343  punctuation               </
1349-1350  punctuation               >
1351-1361  svelte_expression         {/snippet}
1351-1361  block                     {/snippet}
1351-1352  punctuation               {
1352-1360  special_keyword           /snippet
1360-1361  punctuation               }
1363-1412  tag                       <p class="some_class hypen-class" id="unique_id">
1363-1365  tag                       <p
1363-1364  punctuation               <
1366-1371  attr_name                 class
1371-1396  attr_value                ="some_class hypen-class"
1371-1372  punctuation               =
1372-1373  punctuation               "
1395-1396  punctuation               "
1397-1399  attr_name                 id
1399-1411  attr_value                ="unique_id"
1399-1400  punctuation               =
1400-1401  punctuation               "
1410-1411  punctuation               "
1411-1412  punctuation               >
1419-1439  tag                       <span class="a b c">
1419-1424  tag                       <span
1419-1420  punctuation               <
1425-1430  attr_name                 class
1430-1438  attr_value                ="a b c"
1430-1431  punctuation               =
1431-1432  punctuation               "
1437-1438  punctuation               "
1438-1439  punctuation               >
1443-1450  tag                       </span>
1443-1449  tag                       </span
1443-1445  punctuation               </
1449-1450  punctuation               >
1451-1455  tag                       </p>
1451-1454  tag                       </p
1451-1453  punctuation               </
1454-1455  punctuation               >
1457-1488  tag                       <button type="button" disabled>
1457-1464  tag                       <button
1457-1458  punctuation               <
1465-1469  attr_name                 type
1469-1478  attr_value                ="button"
1469-1470  punctuation               =
1470-1471  punctuation               "
1477-1478  punctuation               "
1479-1487  attr_name                 disabled
1487-1488  punctuation               >
1498-1507  tag                       </button>
1498-1506  tag                       </button
1498-1500  punctuation               </
1506-1507  punctuation               >
1509-1548  comment                   <!-- comment <div>a<br /> {b}</div> -->
1549-1562  svelte_expression         {b.repeat(2)}
1549-1550  punctuation               {
1550-1561  lang_ts                   b.repeat(2)
1551-1552  punctuation               .
1552-1558  function                  repeat
1558-1559  punctuation               (
1559-1560  number                    2
1560-1561  punctuation               )
1561-1562  punctuation               }
1563-1570  svelte_expression         {bound}
1563-1564  punctuation               {
1564-1569  lang_ts                   bound
1569-1570  punctuation               }
1572-1578  tag                       <br />
1572-1575  tag                       <br
1572-1573  punctuation               <
1576-1578  punctuation               />
1580-1586  tag                       <hr />
1580-1583  tag                       <hr
1580-1581  punctuation               <
1584-1586  punctuation               />
1588-1624  tag                       <img src="image.jpg" alt="access" />
1588-1592  tag                       <img
1588-1589  punctuation               <
1593-1596  attr_name                 src
1596-1608  attr_value                ="image.jpg"
1596-1597  punctuation               =
1597-1598  punctuation               "
1607-1608  punctuation               "
1609-1612  attr_name                 alt
1612-1621  attr_value                ="access"
1612-1613  punctuation               =
1613-1614  punctuation               "
1620-1621  punctuation               "
1622-1624  punctuation               />
1626-1630  tag                       <ul>
1626-1629  tag                       <ul
1626-1627  punctuation               <
1629-1630  punctuation               >
1632-1636  tag                       <li>
1632-1635  tag                       <li
1632-1633  punctuation               <
1635-1636  punctuation               >
1647-1652  tag                       </li>
1647-1651  tag                       </li
1647-1649  punctuation               </
1651-1652  punctuation               >
1654-1658  tag                       <li>
1654-1657  tag                       <li
1654-1655  punctuation               <
1657-1658  punctuation               >
1669-1674  tag                       </li>
1669-1673  tag                       </li
1669-1671  punctuation               </
1673-1674  punctuation               >
1675-1680  tag                       </ul>
1675-1679  tag                       </ul
1675-1677  punctuation               </
1679-1680  punctuation               >
1682-1725  comment                   <!-- embedded tags for boundary testing -->
1726-1731  tag                       <div>
1726-1730  tag                       <div
1726-1727  punctuation               <
1730-1731  punctuation               >
1733-1741  tag                       <script>
1733-1740  tag                       <script
1733-1734  punctuation               <
1740-1741  punctuation               >
1741-1779  script                    \n\t\tconst inline_js = 'no lang attr';\n\t
1741-1779  lang_ts                   \n\t\tconst inline_js = 'no lang attr';\n\t
1744-1749  keyword                   const
1760-1761  operator                  =
1762-1776  string                    'no lang attr'
1776-1777  punctuation               ;
1779-1788  tag                       </script>
1779-1787  tag                       </script
1779-1781  punctuation               </
1787-1788  punctuation               >
1790-1797  tag                       <style>
1790-1796  tag                       <style
1790-1791  punctuation               <
1796-1797  punctuation               >
1797-1831  style                     \n\t\t.inline {\n\t\t\tcolor: blue;\n\t\t}\n\t
1797-1831  lang_css                  \n\t\t.inline {\n\t\t\tcolor: blue;\n\t\t}\n\t
1800-1807  selector                  .inline
1808-1809  punctuation               {
1813-1818  property                  color
1818-1819  punctuation               :
1824-1825  punctuation               ;
1828-1829  punctuation               }
1831-1839  tag                       </style>
1831-1838  tag                       </style
1831-1833  punctuation               </
1838-1839  punctuation               >
1840-1846  tag                       </div>
1840-1845  tag                       </div
1840-1842  punctuation               </
1845-1846  punctuation               >
1848-1855  tag                       <style>
1848-1854  tag                       <style
1848-1849  punctuation               <
1854-1855  punctuation               >
1855-2240  style                     \n\t.some_class {\n\t\tcolor: red;\n\t}\n\n\t.hypen-class {\n\t\tfont-size: 16px;\n\t}\n\n\tp {\n\t\tbox-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n\t}\n\n\t/* comment */\n\n\t/*\n\tmulti\n\tline\n\n\t<comment>\n\n\t*/\n\n\t#unique_id {\n\t\tbackground-color: blue;\n\t}\n\n\t@media (max-width: 600px) {\n\t\t:global(body) {\n\t\t\tbackground-color: light-dark(lightblue, darkblue);\n\t\t}\n\t}\n\n\t:global(.escapehatch)::before {\n\t\tcontent: '< & >';\n\t}\n
1855-2240  lang_css                  \n\t.some_class {\n\t\tcolor: red;\n\t}\n\n\t.hypen-class {\n\t\tfont-size: 16px;\n\t}\n\n\tp {\n\t\tbox-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n\t}\n\n\t/* comment */\n\n\t/*\n\tmulti\n\tline\n\n\t<comment>\n\n\t*/\n\n\t#unique_id {\n\t\tbackground-color: blue;\n\t}\n\n\t@media (max-width: 600px) {\n\t\t:global(body) {\n\t\t\tbackground-color: light-dark(lightblue, darkblue);\n\t\t}\n\t}\n\n\t:global(.escapehatch)::before {\n\t\tcontent: '< & >';\n\t}\n
1857-1868  selector                  .some_class
1869-1870  punctuation               {
1873-1878  property                  color
1878-1879  punctuation               :
1883-1884  punctuation               ;
1886-1887  punctuation               }
1890-1902  selector                  .hypen-class
1903-1904  punctuation               {
1907-1916  property                  font-size
1916-1917  punctuation               :
1922-1923  punctuation               ;
1925-1926  punctuation               }
1929-1930  selector                  p
1931-1932  punctuation               {
1935-1945  property                  box-shadow
1945-1946  punctuation               :
1956-1960  function                  rgba
1960-1961  punctuation               (
1962-1963  punctuation               ,
1965-1966  punctuation               ,
1968-1969  punctuation               ,
1973-1974  punctuation               )
1974-1975  punctuation               ;
1977-1978  punctuation               }
1981-1994  comment                   /* comment */
1997-2029  comment                   /*\n\tmulti\n\tline\n\n\t<comment>\n\n\t*/
2032-2042  selector                  #unique_id
2043-2044  punctuation               {
2047-2063  property                  background-color
2063-2064  punctuation               :
2069-2070  punctuation               ;
2072-2073  punctuation               }
2076-2101  atrule                    @media (max-width: 600px)
2076-2082  rule                      @media
2083-2084  punctuation               (
2084-2093  property                  max-width
2093-2094  punctuation               :
2100-2101  punctuation               )
2102-2103  punctuation               {
2106-2119  selector                  :global(body)
2120-2121  punctuation               {
2125-2141  property                  background-color
2141-2142  punctuation               :
2143-2153  function                  light-dark
2153-2154  punctuation               (
2163-2164  punctuation               ,
2173-2174  punctuation               )
2174-2175  punctuation               ;
2178-2179  punctuation               }
2181-2182  punctuation               }
2185-2214  selector                  :global(.escapehatch)::before
2215-2216  punctuation               {
2219-2226  property                  content
2226-2227  punctuation               :
2228-2235  string                    '< & >'
2235-2236  punctuation               ;
2238-2239  punctuation               }
2240-2248  tag                       </style>
2240-2247  tag                       </style
2240-2242  punctuation               </
2247-2248  punctuation               >
