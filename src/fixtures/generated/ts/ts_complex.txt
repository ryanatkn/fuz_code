=== TOKENS ===
   0-5     keyword                   const
   8-9     operator                  =
  10-11    number                    1
  11-12    punctuation               ;
  14-19    keyword                   const
  21-30    type_annotation           : string 
  21-22    :                         :
  22-30    type                       string 
  23-29    builtin                   string
  30-31    operator                  =
  32-35    string                    'b'
  35-36    punctuation               ;
  38-43    keyword                   const
  46-47    operator                  =
  48-52    boolean                   true
  52-53    punctuation               ;
  55-61    special_keyword           export
  62-66    keyword                   type
  67-76    class_name                Some_Type
  67-76    type_name                 Some_Type
  77-78    operator                  =
  79-80    number                    1
  81-82    operator                  |
  83-86    string                    'b'
  87-88    operator                  |
  89-93    boolean                   true
  93-94    punctuation               ;
  96-103   keyword                   declare
 104-109   keyword                   const
 125-126   operator                  :
 127-130   builtin                   any
 130-131   punctuation               ,
 150-151   operator                  :
 152-155   builtin                   any
 155-156   punctuation               ,
 173-174   operator                  :
 175-178   builtin                   any
 178-179   punctuation               ;
 181-189   keyword                   abstract
 190-195   keyword                   class
 196-200   class_name                Base
 196-200   type_name                 Base
 201-202   punctuation               {
 204-212   keyword                   abstract
 213-228   function                  abstract_method
 228-229   punctuation               (
 229-230   punctuation               )
 230-231   operator                  :
 232-236   keyword                   void
 236-237   punctuation               ;
 238-239   punctuation               }
 241-257   decorator                 @class_decorator
 241-242   at                        @
 242-257   function                  class_decorator
 258-263   keyword                   class
 264-265   class_name                D
 264-265   constant                  D
 266-273   keyword                   extends
 274-278   class_name                Base
 274-278   type_name                 Base
 279-280   punctuation               {
 282-290   keyword                   readonly
 293-302   type_annotation           : string 
 293-294   :                         :
 294-302   type                       string 
 295-301   builtin                   string
 302-303   operator                  =
 304-307   string                    'd'
 307-308   punctuation               ;
 312-313   operator                  :
 314-320   builtin                   number
 320-321   punctuation               ;
 326-327   operator                  =
 328-334   function                  $state
 334-335   punctuation               (
 335-339   keyword                   null
 339-340   punctuation               )
 340-341   punctuation               ;
 344-363   decorator                 @property_decorator
 344-345   at                        @
 345-363   function                  property_decorator
 375-376   operator                  =
 377-381   boolean                   true
 381-382   punctuation               ;
 385-396   function                  constructor
 396-397   punctuation               (
 399-400   operator                  :
 401-407   builtin                   number
 407-408   punctuation               )
 409-410   punctuation               {
 413-418   keyword                   super
 418-419   punctuation               (
 419-420   punctuation               )
 420-421   punctuation               ;
 424-428   keyword                   this
 428-429   punctuation               .
 432-433   operator                  =
 436-437   punctuation               ;
 439-440   punctuation               }
 443-458   function                  abstract_method
 458-459   punctuation               (
 459-460   punctuation               )
 460-461   operator                  :
 462-466   keyword                   void
 467-468   punctuation               {
 471-488   comment                   // implementation
 490-491   punctuation               }
 494-511   decorator                 @method_decorator
 494-495   at                        @
 495-511   function                  method_decorator
 511-512   punctuation               (
 512-521   string                    'example'
 521-522   punctuation               ,
 523-524   punctuation               {
 530-531   operator                  :
 532-536   boolean                   true
 536-537   punctuation               }
 537-538   punctuation               )
 540-552   function                  class_method
 552-553   punctuation               (
 553-554   punctuation               )
 554-555   operator                  :
 556-562   builtin                   string
 563-564   punctuation               {
 567-573   special_keyword           return
 574-593   template_string           `Hello, ${this.d1}`
 574-575   template_punctuation      `
 575-582   string                    Hello, 
 582-592   interpolation             ${this.d1}
 582-584   interpolation_punctuation ${
 584-588   keyword                   this
 588-589   punctuation               .
 591-592   interpolation_punctuation }
 592-593   template_punctuation      `
 593-594   punctuation               ;
 596-597   punctuation               }
 600-615   function_variable         instance_method
 616-617   operator                  =
 618-619   punctuation               (
 619-620   punctuation               )
 620-627   type_annotation           : void 
 620-621   :                         :
 621-627   type                       void 
 622-626   keyword                   void
 627-629   operator                  =>
 630-631   punctuation               {
 634-643   comment                   /* ... */
 646-649   keyword                   let
 652-653   operator                  =
 654-655   number                    0
 655-656   punctuation               ;
 659-661   special_keyword           do
 662-663   punctuation               {
 668-670   operator                  ++
 670-671   punctuation               ;
 674-675   punctuation               }
 676-681   special_keyword           while
 682-683   punctuation               (
 685-686   operator                  <
 687-688   number                    3
 688-689   punctuation               )
 689-690   punctuation               ;
 694-697   special_keyword           for
 698-699   punctuation               (
 699-704   keyword                   const
 708-710   keyword                   of
 711-715   keyword                   this
 715-716   punctuation               .
 718-719   punctuation               )
 720-721   punctuation               {
 725-727   special_keyword           if
 728-729   punctuation               (
 732-735   operator                  ===
 736-739   string                    'd'
 739-740   punctuation               )
 741-749   special_keyword           continue
 749-750   punctuation               ;
 754-756   special_keyword           if
 757-758   punctuation               (
 758-759   operator                  !
 761-762   punctuation               )
 763-768   special_keyword           break
 768-769   punctuation               ;
 773-777   keyword                   this
 777-778   punctuation               .
 778-793   function                  #private_method
 793-794   punctuation               (
 795-796   punctuation               ,
 799-800   punctuation               )
 800-801   punctuation               ;
 804-805   punctuation               }
 809-815   special_keyword           switch
 816-817   punctuation               (
 817-821   keyword                   this
 821-822   punctuation               .
 824-825   punctuation               )
 826-827   punctuation               {
 831-835   special_keyword           case
 836-839   string                    'a'
 839-840   operator                  :
 845-852   builtin                   console
 852-853   punctuation               .
 853-856   function                  log
 856-857   punctuation               (
 857-865   string                    'case a'
 865-866   punctuation               )
 866-867   punctuation               ;
 872-877   special_keyword           break
 877-878   punctuation               ;
 882-886   special_keyword           case
 887-890   string                    'b'
 890-891   operator                  :
 895-899   special_keyword           case
 900-903   string                    'c'
 903-904   operator                  :
 909-916   builtin                   console
 916-917   punctuation               .
 917-920   function                  log
 920-921   punctuation               (
 921-934   string                    'case b or c'
 934-935   punctuation               )
 935-936   punctuation               ;
 941-946   special_keyword           break
 946-947   punctuation               ;
 951-958   special_keyword           default
 958-959   operator                  :
 964-971   builtin                   console
 971-972   punctuation               .
 972-975   function                  log
 975-976   punctuation               (
 976-985   string                    'default'
 985-986   punctuation               )
 986-987   punctuation               ;
 990-991   punctuation               }
 995-1000  keyword                   const
1004-1005  operator                  :
1006-1007  punctuation               {
1013-1014  operator                  ?
1014-1015  operator                  :
1016-1023  builtin                   boolean
1023-1024  punctuation               ;
1029-1030  operator                  :
1031-1038  builtin                   boolean
1038-1039  punctuation               }
1040-1041  operator                  =
1042-1043  punctuation               {
1053-1054  operator                  :
1055-1059  string                    'd1'
1060-1062  keyword                   in
1063-1067  keyword                   this
1067-1068  punctuation               ,
1076-1077  operator                  :
1078-1082  keyword                   this
1083-1093  keyword                   instanceof
1094-1095  class_name                D
1094-1095  constant                  D
1095-1096  punctuation               ,
1099-1100  punctuation               }
1100-1101  punctuation               ;
1104-1110  keyword                   delete
1114-1115  punctuation               .
1121-1122  punctuation               ;
1125-1131  comment                   // foo
1133-1134  punctuation               }
1134-1135  punctuation               ;
1138-1153  function                  #private_method
1153-1154  punctuation               (
1156-1157  operator                  :
1158-1164  builtin                   number
1164-1165  punctuation               ,
1168-1169  operator                  :
1170-1173  builtin                   any
1173-1174  punctuation               )
1175-1176  punctuation               {
1179-1184  special_keyword           throw
1185-1188  keyword                   new
1189-1194  class_name                Error
1189-1194  type_name                 Error
1194-1195  punctuation               (
1195-1241  template_string           `${this.d1}\n\t\t\tmultiline\n\t\t\tetc ${a2 + c2}\n\t\t`
1195-1196  template_punctuation      `
1196-1206  interpolation             ${this.d1}
1196-1198  interpolation_punctuation ${
1198-1202  keyword                   this
1202-1203  punctuation               .
1205-1206  interpolation_punctuation }
1206-1227  string                    \n\t\t\tmultiline\n\t\t\tetc 
1227-1237  interpolation             ${a2 + c2}
1227-1229  interpolation_punctuation ${
1232-1233  operator                  +
1236-1237  interpolation_punctuation }
1237-1240  string                    \n\t\t
1240-1241  template_punctuation      `
1241-1242  punctuation               )
1242-1243  punctuation               ;
1245-1246  punctuation               }
1249-1250  operator                  *
1250-1259  function                  generator
1259-1260  punctuation               (
1260-1261  punctuation               )
1262-1263  punctuation               {
1266-1271  special_keyword           yield
1272-1273  number                    1
1273-1274  punctuation               ;
1277-1282  special_keyword           yield
1282-1283  operator                  *
1284-1285  punctuation               [
1285-1286  number                    2
1286-1287  punctuation               ,
1288-1289  number                    3
1289-1290  punctuation               ]
1290-1291  punctuation               ;
1293-1294  punctuation               }
1303-1304  operator                  *
1304-1319  function                  async_generator
1319-1320  punctuation               (
1320-1321  punctuation               )
1322-1323  punctuation               {
1326-1331  special_keyword           yield
1332-1337  special_keyword           await
1338-1345  builtin                   Promise
1345-1346  punctuation               .
1346-1353  function                  resolve
1353-1354  punctuation               (
1354-1355  number                    4
1355-1356  punctuation               )
1356-1357  punctuation               ;
1359-1360  punctuation               }
1363-1372  keyword                   protected
1373-1378  keyword                   async
1379-1395  function                  protected_method
1395-1396  punctuation               (
1396-1397  punctuation               )
1397-1398  operator                  :
1399-1406  builtin                   Promise
1406-1407  operator                  <
1407-1411  keyword                   void
1411-1412  operator                  >
1413-1414  punctuation               {
1417-1420  special_keyword           try
1421-1422  punctuation               {
1426-1431  special_keyword           await
1432-1435  keyword                   new
1436-1443  class_name                Promise
1436-1443  builtin                   Promise
1443-1444  punctuation               (
1444-1445  punctuation               (
1452-1453  punctuation               )
1454-1456  operator                  =>
1457-1467  function                  setTimeout
1467-1468  punctuation               (
1475-1476  punctuation               ,
1477-1480  number                    100
1480-1481  punctuation               )
1481-1482  punctuation               )
1482-1483  punctuation               ;
1487-1489  special_keyword           if
1490-1491  punctuation               (
1495-1496  punctuation               .
1496-1502  function                  random
1502-1503  punctuation               (
1503-1504  punctuation               )
1505-1506  operator                  >
1507-1510  number                    0.5
1510-1511  punctuation               )
1512-1513  punctuation               {
1518-1525  builtin                   console
1525-1526  punctuation               .
1526-1529  function                  log
1529-1530  punctuation               (
1530-1533  keyword                   new
1534-1538  class_name                Date
1534-1538  type_name                 Date
1538-1539  punctuation               (
1539-1540  punctuation               )
1540-1541  punctuation               )
1541-1542  punctuation               ;
1543-1576  comment                   // eslint-disable-line no-console
1580-1581  punctuation               }
1582-1586  special_keyword           else
1587-1589  special_keyword           if
1590-1591  punctuation               (
1595-1596  punctuation               .
1596-1602  function                  random
1602-1603  punctuation               (
1603-1604  punctuation               )
1605-1606  operator                  >
1607-1610  number                    0.2
1610-1611  punctuation               )
1612-1613  punctuation               {
1618-1625  builtin                   console
1625-1626  punctuation               .
1626-1629  function                  log
1629-1630  punctuation               (
1630-1646  string                    'else if branch'
1646-1647  punctuation               )
1647-1648  punctuation               ;
1652-1653  punctuation               }
1654-1658  special_keyword           else
1659-1660  punctuation               {
1665-1672  builtin                   console
1672-1673  punctuation               .
1673-1676  function                  log
1676-1677  punctuation               (
1677-1690  string                    'else branch'
1690-1691  punctuation               )
1691-1692  punctuation               ;
1696-1697  punctuation               }
1700-1701  punctuation               }
1702-1707  special_keyword           catch
1708-1709  punctuation               (
1714-1715  operator                  :
1716-1723  builtin                   unknown
1723-1724  punctuation               )
1725-1726  punctuation               {
1730-1737  builtin                   console
1737-1738  punctuation               .
1738-1743  function                  error
1743-1744  punctuation               (
1749-1750  punctuation               )
1750-1751  punctuation               ;
1754-1755  punctuation               }
1756-1763  special_keyword           finally
1764-1765  punctuation               {
1769-1776  builtin                   console
1776-1777  punctuation               .
1777-1780  function                  log
1780-1781  punctuation               (
1781-1796  string                    'finally block'
1796-1797  punctuation               )
1797-1798  punctuation               ;
1801-1802  punctuation               }
1804-1805  punctuation               }
1806-1807  punctuation               }
1809-1819  comment                   // comment
1821-1864  comment                   /*\nother comment\n\nconst comment = false;\n*/
1866-1890  comment                   /**\n * JSDoc comment\n */
1892-1898  special_keyword           import
1899-1900  punctuation               {
1912-1913  punctuation               ,
1914-1918  keyword                   type
1919-1930  class_name                Sample_Lang
1919-1930  type_name                 Sample_Lang
1930-1931  punctuation               }
1932-1936  special_keyword           from
1937-1956  string                    '../code_sample.js'
1956-1957  punctuation               ;
1958-1964  special_keyword           import
1965-1966  operator                  *
1967-1969  special_keyword           as
1970-1971  constant                  A
1972-1976  special_keyword           from
1977-1996  string                    '../code_sample.js'
1996-1997  punctuation               ;
1999-2005  special_keyword           export
2006-2007  punctuation               {
2008-2009  punctuation               ,
2010-2011  constant                  A
2011-2012  punctuation               ,
2014-2015  punctuation               ,
2017-2018  punctuation               ,
2019-2020  constant                  D
2020-2021  punctuation               }
2021-2022  punctuation               ;
2037-2039  special_keyword           as
2040-2047  builtin                   unknown
2048-2050  special_keyword           as
2051-2054  builtin                   any
2055-2057  special_keyword           as
2070-2079  keyword                   satisfies
2091-2092  punctuation               ;
2094-2100  special_keyword           export
2101-2110  keyword                   interface
2111-2127  class_name                Some_E<T = null>
2111-2117  type_name                 Some_E
2117-2118  operator                  <
2118-2119  constant                  T
2120-2121  operator                  =
2122-2126  keyword                   null
2126-2127  operator                  >
2128-2129  punctuation               {
2135-2136  operator                  :
2137-2143  builtin                   string
2143-2144  punctuation               ;
2149-2150  operator                  :
2151-2157  builtin                   number
2157-2158  punctuation               ;
2161-2162  operator                  ?
2162-2163  operator                  :
2164-2165  constant                  T
2165-2166  punctuation               ;
2167-2168  punctuation               }
2170-2175  keyword                   const
2177-2178  operator                  :
2179-2180  punctuation               {
2184-2185  operator                  :
2186-2192  builtin                   string
2192-2193  punctuation               ;
2197-2198  operator                  :
2199-2205  builtin                   number
2205-2206  punctuation               }
2207-2208  operator                  =
2209-2210  punctuation               {
2214-2215  operator                  :
2216-2223  string                    'A. H.'
2223-2224  punctuation               ,
2228-2229  operator                  :
2230-2233  number                    100
2233-2234  punctuation               }
2234-2235  punctuation               ;
2236-2241  keyword                   const
2244-2245  operator                  =
2246-2247  punctuation               [
2247-2248  punctuation               [
2248-2250  string                    ''
2250-2251  punctuation               ,
2253-2254  punctuation               ]
2254-2255  punctuation               ]
2256-2258  special_keyword           as
2259-2264  keyword                   const
2264-2265  punctuation               ;
2266-2272  special_keyword           export
2273-2278  keyword                   const
2285-2307  type_annotation           : Map<string, Some_E> 
2285-2286  :                         :
2286-2307  type                       Map<string, Some_E> 
2287-2290  type_name                 Map
2290-2291  operator                  <
2291-2297  builtin                   string
2297-2298  punctuation               ,
2299-2305  type_name                 Some_E
2305-2306  operator                  >
2307-2308  operator                  =
2309-2312  keyword                   new
2313-2316  class_name                Map
2313-2316  type_name                 Map
2316-2317  punctuation               (
2318-2319  punctuation               )
2319-2320  punctuation               ;
2322-2328  special_keyword           export
2329-2337  keyword                   function
2338-2341  function                  add
2341-2342  punctuation               (
2343-2344  operator                  :
2345-2351  builtin                   number
2351-2352  punctuation               ,
2354-2355  operator                  :
2356-2362  builtin                   number
2362-2363  punctuation               )
2363-2364  operator                  :
2365-2371  builtin                   number
2372-2373  punctuation               {
2375-2381  special_keyword           return
2384-2385  operator                  +
2387-2388  punctuation               ;
2389-2390  punctuation               }
2392-2398  special_keyword           export
2399-2404  keyword                   const
2405-2409  function_variable         plus
2410-2411  operator                  =
2412-2413  punctuation               (
2414-2415  operator                  :
2416-2419  builtin                   any
2419-2420  punctuation               ,
2422-2423  operator                  :
2424-2427  builtin                   any
2427-2428  punctuation               )
2428-2434  type_annotation           : any 
2428-2429  :                         :
2429-2434  type                       any 
2430-2433  builtin                   any
2434-2436  operator                  =>
2439-2440  operator                  +
2442-2443  punctuation               ;
2445-2467  comment                   // boundary test cases
2468-2474  special_keyword           export
2475-2480  keyword                   const
2499-2500  operator                  =
2501-2530  string                    'const class function string'
2530-2531  punctuation               ;
2532-2538  special_keyword           export
2539-2544  keyword                   const
2562-2563  operator                  =
2564-2590  string                    '// this is not a comment'
2590-2591  punctuation               ;
2592-2598  special_keyword           export
2599-2604  keyword                   const
2624-2625  operator                  =
2626-2643  template_string           `Value: ${1 + 2}`
2626-2627  template_punctuation      `
2627-2634  string                    Value: 
2634-2642  interpolation             ${1 + 2}
2634-2636  interpolation_punctuation ${
2636-2637  number                    1
2638-2639  operator                  +
2640-2641  number                    2
2641-2642  interpolation_punctuation }
2642-2643  template_punctuation      `
2643-2644  punctuation               ;
2646-2678  comment                   // regex that looks like comment
2679-2685  special_keyword           export
2686-2691  keyword                   const
2698-2699  operator                  =
2700-2709  regex                     /\/\/.*/g
2700-2701  regex_delimiter           /
2701-2707  regex_source              \/\/.*
2707-2708  regex_delimiter           /
2708-2709  regex_flags               g
2709-2710  punctuation               ;
2711-2717  special_keyword           export
2718-2723  keyword                   const
2738-2739  operator                  =
2740-2772  regex                     /^(?:\/\*.*?\*\/|\/\/.*|[^/])+$/
2740-2741  regex_delimiter           /
2741-2771  regex_source              ^(?:\/\*.*?\*\/|\/\/.*|[^/])+$
2771-2772  regex_delimiter           /
2772-2773  punctuation               ;
2775-2831  comment                   // string in comment should not be highlighted as string
2832-2883  comment                   // const commented = "this string is in a comment";

=== STATS ===
Total tokens: 619
Sample length: 2884 characters

Token types:
  punctuation: 235
  operator: 83
  keyword: 54
  special_keyword: 49
  builtin: 37
  function: 26
  string: 25
  number: 14
  class_name: 11
  comment: 11
  type_name: 10
  interpolation_punctuation: 8
  constant: 7
  template_punctuation: 6
  type_annotation: 5
  :: 5
  type: 5
  boolean: 4
  interpolation: 4
  regex_delimiter: 4
  decorator: 3
  at: 3
  template_string: 3
  function_variable: 2
  regex: 2
  regex_source: 2
  regex_flags: 1
