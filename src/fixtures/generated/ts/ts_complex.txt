=== STATS ===
Sample length: 2821 characters
Total tokens: 611

Token types (27 unique):
  punctuation: 233
  operator: 81
  keyword: 54
  special_keyword: 48
  builtin: 34
  function: 26
  string: 25
  number: 14
  class_name: 11
  comment: 11
  type_name: 10
  interpolation_punctuation: 8
  constant: 7
  template_punctuation: 6
  type_annotation: 5
  :: 5
  type: 5
  boolean: 4
  interpolation: 4
  regex_delimiter: 4
  decorator: 3
  at: 3
  template_string: 3
  function_variable: 2
  regex: 2
  regex_source: 2
  regex_flags: 1

=== TOKENS ===
   0-5     keyword                   const
   8-9     operator                  =
  10-11    number                    1
  11-12    punctuation               ;
  14-19    keyword                   const
  21-30    type_annotation           : string 
  21-22    :                         :
  22-30    type                       string 
  23-29    builtin                   string
  30-31    operator                  =
  32-35    string                    'b'
  35-36    punctuation               ;
  38-43    keyword                   const
  46-47    operator                  =
  48-52    boolean                   true
  52-53    punctuation               ;
  55-61    special_keyword           export
  62-66    keyword                   type
  67-76    class_name                Some_Type
  67-76    type_name                 Some_Type
  77-78    operator                  =
  79-80    number                    1
  81-82    operator                  |
  83-86    string                    'b'
  87-88    operator                  |
  89-93    boolean                   true
  93-94    punctuation               ;
  96-103   keyword                   declare
 104-109   keyword                   const
 124-125   operator                  :
 126-129   builtin                   any
 129-130   punctuation               ;
 132-140   keyword                   abstract
 141-146   keyword                   class
 147-151   class_name                Base
 147-151   type_name                 Base
 152-153   punctuation               {
 155-163   keyword                   abstract
 164-179   function                  abstract_method
 179-180   punctuation               (
 180-181   punctuation               )
 181-182   operator                  :
 183-187   keyword                   void
 187-188   punctuation               ;
 189-190   punctuation               }
 192-207   decorator                 @some_decorator
 192-193   at                        @
 193-207   function                  some_decorator
 208-213   keyword                   class
 214-215   class_name                D
 214-215   constant                  D
 216-223   keyword                   extends
 224-228   class_name                Base
 224-228   type_name                 Base
 229-230   punctuation               {
 232-240   keyword                   readonly
 243-252   type_annotation           : string 
 243-244   :                         :
 244-252   type                       string 
 245-251   builtin                   string
 252-253   operator                  =
 254-257   string                    'd'
 257-258   punctuation               ;
 262-263   operator                  :
 264-270   builtin                   number
 270-271   punctuation               ;
 276-277   operator                  =
 278-284   function                  $state
 284-285   punctuation               (
 285-289   keyword                   null
 289-290   punctuation               )
 290-291   punctuation               ;
 294-309   decorator                 @some_decorator
 294-295   at                        @
 295-309   function                  some_decorator
 321-322   operator                  =
 323-327   boolean                   true
 327-328   punctuation               ;
 331-342   function                  constructor
 342-343   punctuation               (
 345-346   operator                  :
 347-353   builtin                   number
 353-354   punctuation               )
 355-356   punctuation               {
 359-364   keyword                   super
 364-365   punctuation               (
 365-366   punctuation               )
 366-367   punctuation               ;
 370-374   keyword                   this
 374-375   punctuation               .
 378-379   operator                  =
 382-383   punctuation               ;
 385-386   punctuation               }
 389-404   function                  abstract_method
 404-405   punctuation               (
 405-406   punctuation               )
 406-407   operator                  :
 408-412   keyword                   void
 413-414   punctuation               {
 417-434   comment                   // implementation
 436-437   punctuation               }
 440-455   decorator                 @some_decorator
 440-441   at                        @
 441-455   function                  some_decorator
 455-456   punctuation               (
 456-465   string                    'example'
 465-466   punctuation               ,
 467-468   punctuation               {
 474-475   operator                  :
 476-480   boolean                   true
 480-481   punctuation               }
 481-482   punctuation               )
 484-496   function                  class_method
 496-497   punctuation               (
 497-498   punctuation               )
 498-499   operator                  :
 500-506   builtin                   string
 507-508   punctuation               {
 511-517   special_keyword           return
 518-537   template_string           `Hello, ${this.d1}`
 518-519   template_punctuation      `
 519-526   string                    Hello, 
 526-536   interpolation             ${this.d1}
 526-528   interpolation_punctuation ${
 528-532   keyword                   this
 532-533   punctuation               .
 535-536   interpolation_punctuation }
 536-537   template_punctuation      `
 537-538   punctuation               ;
 540-541   punctuation               }
 544-559   function_variable         instance_method
 560-561   operator                  =
 562-563   punctuation               (
 563-564   punctuation               )
 564-571   type_annotation           : void 
 564-565   :                         :
 565-571   type                       void 
 566-570   keyword                   void
 571-573   operator                  =>
 574-575   punctuation               {
 578-587   comment                   /* ... */
 590-593   keyword                   let
 596-597   operator                  =
 598-599   number                    0
 599-600   punctuation               ;
 603-605   special_keyword           do
 606-607   punctuation               {
 612-614   operator                  ++
 614-615   punctuation               ;
 618-619   punctuation               }
 620-625   special_keyword           while
 626-627   punctuation               (
 629-630   operator                  <
 631-632   number                    3
 632-633   punctuation               )
 633-634   punctuation               ;
 638-641   special_keyword           for
 642-643   punctuation               (
 643-648   keyword                   const
 652-654   keyword                   of
 655-659   keyword                   this
 659-660   punctuation               .
 662-663   punctuation               )
 664-665   punctuation               {
 669-671   special_keyword           if
 672-673   punctuation               (
 676-679   operator                  ===
 680-683   string                    'd'
 683-684   punctuation               )
 685-693   special_keyword           continue
 693-694   punctuation               ;
 698-700   special_keyword           if
 701-702   punctuation               (
 702-703   operator                  !
 705-706   punctuation               )
 707-712   special_keyword           break
 712-713   punctuation               ;
 717-721   keyword                   this
 721-722   punctuation               .
 722-737   function                  #private_method
 737-738   punctuation               (
 739-740   punctuation               ,
 743-744   punctuation               )
 744-745   punctuation               ;
 748-749   punctuation               }
 753-759   special_keyword           switch
 760-761   punctuation               (
 761-765   keyword                   this
 765-766   punctuation               .
 768-769   punctuation               )
 770-771   punctuation               {
 775-779   special_keyword           case
 780-783   string                    'a'
 783-784   operator                  :
 789-796   builtin                   console
 796-797   punctuation               .
 797-800   function                  log
 800-801   punctuation               (
 801-809   string                    'case a'
 809-810   punctuation               )
 810-811   punctuation               ;
 816-821   special_keyword           break
 821-822   punctuation               ;
 826-830   special_keyword           case
 831-834   string                    'b'
 834-835   operator                  :
 839-843   special_keyword           case
 844-847   string                    'c'
 847-848   operator                  :
 853-860   builtin                   console
 860-861   punctuation               .
 861-864   function                  log
 864-865   punctuation               (
 865-878   string                    'case b or c'
 878-879   punctuation               )
 879-880   punctuation               ;
 885-890   special_keyword           break
 890-891   punctuation               ;
 895-902   special_keyword           default
 902-903   operator                  :
 908-915   builtin                   console
 915-916   punctuation               .
 916-919   function                  log
 919-920   punctuation               (
 920-929   string                    'default'
 929-930   punctuation               )
 930-931   punctuation               ;
 934-935   punctuation               }
 939-944   keyword                   const
 948-949   operator                  :
 950-951   punctuation               {
 957-958   operator                  ?
 958-959   operator                  :
 960-967   builtin                   boolean
 967-968   punctuation               ;
 973-974   operator                  :
 975-982   builtin                   boolean
 982-983   punctuation               }
 984-985   operator                  =
 986-987   punctuation               {
 997-998   operator                  :
 999-1003  string                    'd1'
1004-1006  keyword                   in
1007-1011  keyword                   this
1011-1012  punctuation               ,
1020-1021  operator                  :
1022-1026  keyword                   this
1027-1037  keyword                   instanceof
1038-1039  class_name                D
1038-1039  constant                  D
1039-1040  punctuation               ,
1043-1044  punctuation               }
1044-1045  punctuation               ;
1048-1054  keyword                   delete
1058-1059  punctuation               .
1065-1066  punctuation               ;
1069-1075  comment                   // foo
1077-1078  punctuation               }
1078-1079  punctuation               ;
1082-1097  function                  #private_method
1097-1098  punctuation               (
1100-1101  operator                  :
1102-1108  builtin                   number
1108-1109  punctuation               ,
1112-1113  operator                  :
1114-1117  builtin                   any
1117-1118  punctuation               )
1119-1120  punctuation               {
1123-1128  special_keyword           throw
1129-1132  keyword                   new
1133-1138  class_name                Error
1133-1138  type_name                 Error
1138-1139  punctuation               (
1139-1185  template_string           `${this.d1}\n\t\t\tmultiline\n\t\t\tetc ${a2 + c2}\n\t\t`
1139-1140  template_punctuation      `
1140-1150  interpolation             ${this.d1}
1140-1142  interpolation_punctuation ${
1142-1146  keyword                   this
1146-1147  punctuation               .
1149-1150  interpolation_punctuation }
1150-1171  string                    \n\t\t\tmultiline\n\t\t\tetc 
1171-1181  interpolation             ${a2 + c2}
1171-1173  interpolation_punctuation ${
1176-1177  operator                  +
1180-1181  interpolation_punctuation }
1181-1184  string                    \n\t\t
1184-1185  template_punctuation      `
1185-1186  punctuation               )
1186-1187  punctuation               ;
1189-1190  punctuation               }
1193-1194  operator                  *
1194-1203  function                  generator
1203-1204  punctuation               (
1204-1205  punctuation               )
1206-1207  punctuation               {
1210-1215  special_keyword           yield
1216-1217  number                    1
1217-1218  punctuation               ;
1221-1226  special_keyword           yield
1226-1227  operator                  *
1228-1229  punctuation               [
1229-1230  number                    2
1230-1231  punctuation               ,
1232-1233  number                    3
1233-1234  punctuation               ]
1234-1235  punctuation               ;
1237-1238  punctuation               }
1247-1248  operator                  *
1248-1263  function                  async_generator
1263-1264  punctuation               (
1264-1265  punctuation               )
1266-1267  punctuation               {
1270-1275  special_keyword           yield
1276-1281  special_keyword           await
1282-1289  builtin                   Promise
1289-1290  punctuation               .
1290-1297  function                  resolve
1297-1298  punctuation               (
1298-1299  number                    4
1299-1300  punctuation               )
1300-1301  punctuation               ;
1303-1304  punctuation               }
1307-1316  keyword                   protected
1317-1322  keyword                   async
1323-1339  function                  protected_method
1339-1340  punctuation               (
1340-1341  punctuation               )
1341-1342  operator                  :
1343-1350  builtin                   Promise
1350-1351  operator                  <
1351-1355  keyword                   void
1355-1356  operator                  >
1357-1358  punctuation               {
1361-1364  special_keyword           try
1365-1366  punctuation               {
1370-1375  special_keyword           await
1376-1379  keyword                   new
1380-1387  class_name                Promise
1380-1387  builtin                   Promise
1387-1388  punctuation               (
1388-1389  punctuation               (
1396-1397  punctuation               )
1398-1400  operator                  =>
1401-1411  function                  setTimeout
1411-1412  punctuation               (
1419-1420  punctuation               ,
1421-1424  number                    100
1424-1425  punctuation               )
1425-1426  punctuation               )
1426-1427  punctuation               ;
1431-1433  special_keyword           if
1434-1435  punctuation               (
1439-1440  punctuation               .
1440-1446  function                  random
1446-1447  punctuation               (
1447-1448  punctuation               )
1449-1450  operator                  >
1451-1454  number                    0.5
1454-1455  punctuation               )
1456-1457  punctuation               {
1462-1469  builtin                   console
1469-1470  punctuation               .
1470-1473  function                  log
1473-1474  punctuation               (
1474-1477  keyword                   new
1478-1482  class_name                Date
1478-1482  type_name                 Date
1482-1483  punctuation               (
1483-1484  punctuation               )
1484-1485  punctuation               )
1485-1486  punctuation               ;
1487-1520  comment                   // eslint-disable-line no-console
1524-1525  punctuation               }
1526-1530  special_keyword           else
1531-1533  special_keyword           if
1534-1535  punctuation               (
1539-1540  punctuation               .
1540-1546  function                  random
1546-1547  punctuation               (
1547-1548  punctuation               )
1549-1550  operator                  >
1551-1554  number                    0.2
1554-1555  punctuation               )
1556-1557  punctuation               {
1562-1569  builtin                   console
1569-1570  punctuation               .
1570-1573  function                  log
1573-1574  punctuation               (
1574-1590  string                    'else if branch'
1590-1591  punctuation               )
1591-1592  punctuation               ;
1596-1597  punctuation               }
1598-1602  special_keyword           else
1603-1604  punctuation               {
1609-1616  builtin                   console
1616-1617  punctuation               .
1617-1620  function                  log
1620-1621  punctuation               (
1621-1634  string                    'else branch'
1634-1635  punctuation               )
1635-1636  punctuation               ;
1640-1641  punctuation               }
1644-1645  punctuation               }
1646-1651  special_keyword           catch
1652-1653  punctuation               (
1658-1659  operator                  :
1660-1667  builtin                   unknown
1667-1668  punctuation               )
1669-1670  punctuation               {
1674-1681  builtin                   console
1681-1682  punctuation               .
1682-1687  function                  error
1687-1688  punctuation               (
1693-1694  punctuation               )
1694-1695  punctuation               ;
1698-1699  punctuation               }
1700-1707  special_keyword           finally
1708-1709  punctuation               {
1713-1720  builtin                   console
1720-1721  punctuation               .
1721-1724  function                  log
1724-1725  punctuation               (
1725-1740  string                    'finally block'
1740-1741  punctuation               )
1741-1742  punctuation               ;
1745-1746  punctuation               }
1748-1749  punctuation               }
1750-1751  punctuation               }
1753-1763  comment                   // comment
1765-1808  comment                   /*\nother comment\n\nconst comment = false;\n*/
1810-1834  comment                   /**\n * JSDoc comment\n */
1836-1842  special_keyword           import
1843-1844  punctuation               {
1856-1857  punctuation               ,
1858-1862  keyword                   type
1863-1874  class_name                Sample_Lang
1863-1874  type_name                 Sample_Lang
1874-1875  punctuation               }
1876-1880  special_keyword           from
1881-1900  string                    '../code_sample.js'
1900-1901  punctuation               ;
1902-1908  special_keyword           import
1909-1910  operator                  *
1911-1913  special_keyword           as
1914-1915  constant                  A
1916-1920  special_keyword           from
1921-1940  string                    '../code_sample.js'
1940-1941  punctuation               ;
1943-1949  special_keyword           export
1950-1951  punctuation               {
1952-1953  punctuation               ,
1954-1955  constant                  A
1955-1956  punctuation               ,
1958-1959  punctuation               ,
1961-1962  punctuation               ,
1963-1964  constant                  D
1964-1965  punctuation               }
1965-1966  punctuation               ;
1981-1983  special_keyword           as
1984-1991  builtin                   unknown
1992-1994  special_keyword           as
2007-2016  keyword                   satisfies
2028-2029  punctuation               ;
2031-2037  special_keyword           export
2038-2047  keyword                   interface
2048-2064  class_name                Some_E<T = null>
2048-2054  type_name                 Some_E
2054-2055  operator                  <
2055-2056  constant                  T
2057-2058  operator                  =
2059-2063  keyword                   null
2063-2064  operator                  >
2065-2066  punctuation               {
2072-2073  operator                  :
2074-2080  builtin                   string
2080-2081  punctuation               ;
2086-2087  operator                  :
2088-2094  builtin                   number
2094-2095  punctuation               ;
2098-2099  operator                  ?
2099-2100  operator                  :
2101-2102  constant                  T
2102-2103  punctuation               ;
2104-2105  punctuation               }
2107-2112  keyword                   const
2114-2115  operator                  :
2116-2117  punctuation               {
2121-2122  operator                  :
2123-2129  builtin                   string
2129-2130  punctuation               ;
2134-2135  operator                  :
2136-2142  builtin                   number
2142-2143  punctuation               }
2144-2145  operator                  =
2146-2147  punctuation               {
2151-2152  operator                  :
2153-2160  string                    'A. H.'
2160-2161  punctuation               ,
2165-2166  operator                  :
2167-2170  number                    100
2170-2171  punctuation               }
2171-2172  punctuation               ;
2173-2178  keyword                   const
2181-2182  operator                  =
2183-2184  punctuation               [
2184-2185  punctuation               [
2185-2187  string                    ''
2187-2188  punctuation               ,
2190-2191  punctuation               ]
2191-2192  punctuation               ]
2193-2195  special_keyword           as
2196-2201  keyword                   const
2201-2202  punctuation               ;
2203-2209  special_keyword           export
2210-2215  keyword                   const
2222-2244  type_annotation           : Map<string, Some_E> 
2222-2223  :                         :
2223-2244  type                       Map<string, Some_E> 
2224-2227  type_name                 Map
2227-2228  operator                  <
2228-2234  builtin                   string
2234-2235  punctuation               ,
2236-2242  type_name                 Some_E
2242-2243  operator                  >
2244-2245  operator                  =
2246-2249  keyword                   new
2250-2253  class_name                Map
2250-2253  type_name                 Map
2253-2254  punctuation               (
2255-2256  punctuation               )
2256-2257  punctuation               ;
2259-2265  special_keyword           export
2266-2274  keyword                   function
2275-2278  function                  add
2278-2279  punctuation               (
2280-2281  operator                  :
2282-2288  builtin                   number
2288-2289  punctuation               ,
2291-2292  operator                  :
2293-2299  builtin                   number
2299-2300  punctuation               )
2300-2301  operator                  :
2302-2308  builtin                   number
2309-2310  punctuation               {
2312-2318  special_keyword           return
2321-2322  operator                  +
2324-2325  punctuation               ;
2326-2327  punctuation               }
2329-2335  special_keyword           export
2336-2341  keyword                   const
2342-2346  function_variable         plus
2347-2348  operator                  =
2349-2350  punctuation               (
2351-2352  operator                  :
2353-2356  builtin                   any
2356-2357  punctuation               ,
2359-2360  operator                  :
2361-2364  builtin                   any
2364-2365  punctuation               )
2365-2371  type_annotation           : any 
2365-2366  :                         :
2366-2371  type                       any 
2367-2370  builtin                   any
2371-2373  operator                  =>
2376-2377  operator                  +
2379-2380  punctuation               ;
2382-2404  comment                   // boundary test cases
2405-2411  special_keyword           export
2412-2417  keyword                   const
2436-2437  operator                  =
2438-2467  string                    'const class function string'
2467-2468  punctuation               ;
2469-2475  special_keyword           export
2476-2481  keyword                   const
2499-2500  operator                  =
2501-2527  string                    '// this is not a comment'
2527-2528  punctuation               ;
2529-2535  special_keyword           export
2536-2541  keyword                   const
2561-2562  operator                  =
2563-2580  template_string           `Value: ${1 + 2}`
2563-2564  template_punctuation      `
2564-2571  string                    Value: 
2571-2579  interpolation             ${1 + 2}
2571-2573  interpolation_punctuation ${
2573-2574  number                    1
2575-2576  operator                  +
2577-2578  number                    2
2578-2579  interpolation_punctuation }
2579-2580  template_punctuation      `
2580-2581  punctuation               ;
2583-2615  comment                   // regex that looks like comment
2616-2622  special_keyword           export
2623-2628  keyword                   const
2635-2636  operator                  =
2637-2646  regex                     /\/\/.*/g
2637-2638  regex_delimiter           /
2638-2644  regex_source              \/\/.*
2644-2645  regex_delimiter           /
2645-2646  regex_flags               g
2646-2647  punctuation               ;
2648-2654  special_keyword           export
2655-2660  keyword                   const
2675-2676  operator                  =
2677-2709  regex                     /^(?:\/\*.*?\*\/|\/\/.*|[^/])+$/
2677-2678  regex_delimiter           /
2678-2708  regex_source              ^(?:\/\*.*?\*\/|\/\/.*|[^/])+$
2708-2709  regex_delimiter           /
2709-2710  punctuation               ;
2712-2768  comment                   // string in comment should not be highlighted as string
2769-2820  comment                   // const commented = "this string is in a comment";
