=== STATS ===
Sample length: 2885 characters
Total tokens: 632

Token types (27 unique):
  punctuation: 233
  operator: 90
  keyword: 56
  special_keyword: 48
  builtin: 34
  function: 26
  string: 25
  capitalized_identifier: 20
  number: 14
  class_name: 11
  comment: 11
  interpolation_punctuation: 8
  constant: 7
  template_punctuation: 6
  type_annotation: 5
  :: 5
  type: 5
  boolean: 4
  interpolation: 4
  regex_delimiter: 4
  decorator: 3
  at: 3
  template_string: 3
  function_variable: 2
  regex: 2
  regex_source: 2
  regex_flags: 1

=== TOKENS ===
   0-5     keyword                   const
   8-9     operator                  =
  10-11    number                    1
  11-12    punctuation               ;
  14-19    keyword                   const
  21-30    type_annotation           : string 
  21-22    :                         :
  22-30    type                       string 
  23-29    builtin                   string
  30-31    operator                  =
  32-35    string                    'b'
  35-36    punctuation               ;
  38-43    keyword                   const
  46-47    operator                  =
  48-52    boolean                   true
  52-53    punctuation               ;
  55-61    special_keyword           export
  62-66    keyword                   type
  67-76    class_name                Some_Type
  67-76    capitalized_identifier    Some_Type
  77-78    operator                  =
  79-80    number                    1
  81-82    operator                  |
  83-86    string                    'b'
  87-88    operator                  |
  89-93    boolean                   true
  93-94    punctuation               ;
  96-103   keyword                   declare
 104-109   keyword                   const
 124-125   operator                  :
 126-129   builtin                   any
 129-130   punctuation               ;
 132-140   keyword                   abstract
 141-146   keyword                   class
 147-151   class_name                Base
 147-151   capitalized_identifier    Base
 152-153   punctuation               {
 155-163   keyword                   abstract
 164-179   function                  abstract_method
 179-180   punctuation               (
 180-181   punctuation               )
 181-182   operator                  :
 183-187   keyword                   void
 187-188   punctuation               ;
 189-190   punctuation               }
 192-223   comment                   /* eslint-disable no-console */
 225-240   decorator                 @some_decorator
 225-226   at                        @
 226-240   function                  some_decorator
 241-246   keyword                   class
 247-248   class_name                D
 247-248   constant                  D
 249-256   keyword                   extends
 257-261   class_name                Base
 257-261   capitalized_identifier    Base
 262-263   punctuation               {
 265-273   keyword                   readonly
 276-285   type_annotation           : string 
 276-277   :                         :
 277-285   type                       string 
 278-284   builtin                   string
 285-286   operator                  =
 287-290   string                    'd'
 290-291   punctuation               ;
 295-296   operator                  :
 297-303   builtin                   number
 303-304   punctuation               ;
 309-310   operator                  =
 311-317   function                  $state
 317-318   punctuation               (
 318-322   keyword                   null
 322-323   punctuation               )
 323-324   punctuation               ;
 327-342   decorator                 @some_decorator
 327-328   at                        @
 328-342   function                  some_decorator
 354-355   operator                  =
 356-360   boolean                   true
 360-361   punctuation               ;
 364-375   function                  constructor
 375-376   punctuation               (
 378-379   operator                  :
 380-386   builtin                   number
 386-387   punctuation               )
 388-389   punctuation               {
 392-397   keyword                   super
 397-398   punctuation               (
 398-399   punctuation               )
 399-400   punctuation               ;
 403-407   keyword                   this
 407-408   punctuation               .
 411-412   operator                  =
 415-416   punctuation               ;
 418-419   punctuation               }
 422-437   function                  abstract_method
 437-438   punctuation               (
 438-439   punctuation               )
 439-440   operator                  :
 441-445   keyword                   void
 446-447   punctuation               {
 450-467   comment                   // implementation
 469-470   punctuation               }
 473-488   decorator                 @some_decorator
 473-474   at                        @
 474-488   function                  some_decorator
 488-489   punctuation               (
 489-498   string                    'example'
 498-499   punctuation               ,
 500-501   punctuation               {
 507-508   operator                  :
 509-513   boolean                   true
 513-514   punctuation               }
 514-515   punctuation               )
 517-529   function                  class_method
 529-530   punctuation               (
 530-531   punctuation               )
 531-532   operator                  :
 533-539   builtin                   string
 540-541   punctuation               {
 544-550   special_keyword           return
 551-570   template_string           `Hello, ${this.d1}`
 551-552   template_punctuation      `
 552-559   string                    Hello, 
 559-569   interpolation             ${this.d1}
 559-561   interpolation_punctuation ${
 561-565   keyword                   this
 565-566   punctuation               .
 568-569   interpolation_punctuation }
 569-570   template_punctuation      `
 570-571   punctuation               ;
 573-574   punctuation               }
 577-592   function_variable         instance_method
 593-594   operator                  =
 595-596   punctuation               (
 596-597   punctuation               )
 597-604   type_annotation           : void 
 597-598   :                         :
 598-604   type                       void 
 599-603   keyword                   void
 604-606   operator                  =>
 607-608   punctuation               {
 611-620   comment                   /* ... */
 623-626   keyword                   let
 629-630   operator                  =
 631-632   number                    0
 632-633   punctuation               ;
 636-638   special_keyword           do
 639-640   punctuation               {
 645-647   operator                  ++
 647-648   punctuation               ;
 651-652   punctuation               }
 653-658   special_keyword           while
 659-660   punctuation               (
 662-663   operator                  <
 664-665   number                    3
 665-666   punctuation               )
 666-667   punctuation               ;
 671-674   special_keyword           for
 675-676   punctuation               (
 676-681   keyword                   const
 685-687   keyword                   of
 688-692   keyword                   this
 692-693   punctuation               .
 695-696   punctuation               )
 697-698   punctuation               {
 702-704   special_keyword           if
 705-706   punctuation               (
 709-712   operator                  ===
 713-716   string                    'd'
 716-717   punctuation               )
 718-726   special_keyword           continue
 726-727   punctuation               ;
 731-733   special_keyword           if
 734-735   punctuation               (
 735-736   operator                  !
 738-739   punctuation               )
 740-745   special_keyword           break
 745-746   punctuation               ;
 750-754   keyword                   this
 754-755   punctuation               .
 755-770   function                  #private_method
 770-771   punctuation               (
 772-773   punctuation               ,
 776-777   punctuation               )
 777-778   punctuation               ;
 781-782   punctuation               }
 786-792   special_keyword           switch
 793-794   punctuation               (
 794-798   keyword                   this
 798-799   punctuation               .
 801-802   punctuation               )
 803-804   punctuation               {
 808-812   special_keyword           case
 813-816   string                    'a'
 816-817   operator                  :
 822-829   builtin                   console
 829-830   punctuation               .
 830-833   function                  log
 833-834   punctuation               (
 834-842   string                    'case a'
 842-843   punctuation               )
 843-844   punctuation               ;
 849-854   special_keyword           break
 854-855   punctuation               ;
 859-863   special_keyword           case
 864-867   string                    'b'
 867-868   operator                  :
 872-876   special_keyword           case
 877-880   string                    'c'
 880-881   operator                  :
 886-893   builtin                   console
 893-894   punctuation               .
 894-897   function                  log
 897-898   punctuation               (
 898-911   string                    'case b or c'
 911-912   punctuation               )
 912-913   punctuation               ;
 918-923   special_keyword           break
 923-924   punctuation               ;
 928-935   special_keyword           default
 935-936   operator                  :
 941-948   builtin                   console
 948-949   punctuation               .
 949-952   function                  log
 952-953   punctuation               (
 953-962   string                    'default'
 962-963   punctuation               )
 963-964   punctuation               ;
 967-968   punctuation               }
 972-977   keyword                   const
 981-982   operator                  :
 983-984   punctuation               {
 990-991   operator                  ?
 991-992   operator                  :
 993-1000  builtin                   boolean
1000-1001  punctuation               ;
1006-1007  operator                  :
1008-1015  builtin                   boolean
1015-1016  punctuation               }
1017-1018  operator                  =
1019-1020  punctuation               {
1030-1031  operator                  :
1032-1036  string                    'd1'
1037-1039  keyword                   in
1040-1044  keyword                   this
1044-1045  punctuation               ,
1053-1054  operator                  :
1055-1059  keyword                   this
1060-1070  keyword                   instanceof
1071-1072  class_name                D
1071-1072  constant                  D
1072-1073  punctuation               ,
1076-1077  punctuation               }
1077-1078  punctuation               ;
1081-1087  keyword                   delete
1091-1092  punctuation               .
1098-1099  punctuation               ;
1102-1108  comment                   // foo
1110-1111  punctuation               }
1111-1112  punctuation               ;
1115-1130  function                  #private_method
1130-1131  punctuation               (
1133-1134  operator                  :
1135-1141  builtin                   number
1141-1142  punctuation               ,
1145-1146  operator                  :
1147-1150  builtin                   any
1150-1151  punctuation               )
1151-1152  operator                  :
1153-1157  keyword                   void
1158-1159  punctuation               {
1162-1167  special_keyword           throw
1168-1171  keyword                   new
1172-1177  class_name                Error
1172-1177  capitalized_identifier    Error
1177-1178  punctuation               (
1178-1224  template_string           `${this.d1}\n\t\t\tmultiline\n\t\t\tetc ${a2 + c2}\n\t\t`
1178-1179  template_punctuation      `
1179-1189  interpolation             ${this.d1}
1179-1181  interpolation_punctuation ${
1181-1185  keyword                   this
1185-1186  punctuation               .
1188-1189  interpolation_punctuation }
1189-1210  string                    \n\t\t\tmultiline\n\t\t\tetc 
1210-1220  interpolation             ${a2 + c2}
1210-1212  interpolation_punctuation ${
1215-1216  operator                  +
1219-1220  interpolation_punctuation }
1220-1223  string                    \n\t\t
1223-1224  template_punctuation      `
1224-1225  punctuation               )
1225-1226  punctuation               ;
1228-1229  punctuation               }
1232-1233  operator                  *
1233-1242  function                  generator
1242-1243  punctuation               (
1243-1244  punctuation               )
1244-1245  operator                  :
1246-1255  capitalized_identifier    Generator
1255-1256  operator                  <
1256-1262  builtin                   number
1263-1264  operator                  |
1265-1270  capitalized_identifier    Array
1270-1271  operator                  <
1271-1277  builtin                   number
1277-1279  operator                  >>
1280-1281  punctuation               {
1284-1289  special_keyword           yield
1290-1291  number                    1
1291-1292  punctuation               ;
1295-1300  special_keyword           yield
1300-1301  operator                  *
1302-1303  punctuation               [
1303-1304  number                    2
1304-1305  punctuation               ,
1306-1307  number                    3
1307-1308  punctuation               ]
1308-1309  punctuation               ;
1311-1312  punctuation               }
1315-1320  keyword                   async
1321-1322  operator                  *
1322-1337  function                  async_generator
1337-1338  punctuation               (
1338-1339  punctuation               )
1339-1340  operator                  :
1341-1355  capitalized_identifier    AsyncGenerator
1355-1356  operator                  <
1356-1362  builtin                   number
1362-1363  operator                  >
1364-1365  punctuation               {
1368-1373  special_keyword           yield
1374-1379  special_keyword           await
1380-1387  capitalized_identifier    Promise
1387-1388  punctuation               .
1388-1395  function                  resolve
1395-1396  punctuation               (
1396-1397  number                    4
1397-1398  punctuation               )
1398-1399  punctuation               ;
1401-1402  punctuation               }
1405-1414  keyword                   protected
1415-1420  keyword                   async
1421-1437  function                  protected_method
1437-1438  punctuation               (
1438-1439  punctuation               )
1439-1440  operator                  :
1441-1448  capitalized_identifier    Promise
1448-1449  operator                  <
1449-1453  keyword                   void
1453-1454  operator                  >
1455-1456  punctuation               {
1459-1462  special_keyword           try
1463-1464  punctuation               {
1468-1473  special_keyword           await
1474-1477  keyword                   new
1478-1485  class_name                Promise
1478-1485  capitalized_identifier    Promise
1485-1486  punctuation               (
1486-1487  punctuation               (
1494-1495  punctuation               )
1496-1498  operator                  =>
1499-1509  function                  setTimeout
1509-1510  punctuation               (
1517-1518  punctuation               ,
1519-1522  number                    100
1522-1523  punctuation               )
1523-1524  punctuation               )
1524-1525  punctuation               ;
1529-1531  special_keyword           if
1532-1533  punctuation               (
1533-1537  capitalized_identifier    Math
1537-1538  punctuation               .
1538-1544  function                  random
1544-1545  punctuation               (
1545-1546  punctuation               )
1547-1548  operator                  >
1549-1552  number                    0.5
1552-1553  punctuation               )
1554-1555  punctuation               {
1560-1567  builtin                   console
1567-1568  punctuation               .
1568-1571  function                  log
1571-1572  punctuation               (
1572-1575  keyword                   new
1576-1580  class_name                Date
1576-1580  capitalized_identifier    Date
1580-1581  punctuation               (
1581-1582  punctuation               )
1582-1583  punctuation               )
1583-1584  punctuation               ;
1588-1589  punctuation               }
1590-1594  special_keyword           else
1595-1597  special_keyword           if
1598-1599  punctuation               (
1599-1603  capitalized_identifier    Math
1603-1604  punctuation               .
1604-1610  function                  random
1610-1611  punctuation               (
1611-1612  punctuation               )
1613-1614  operator                  >
1615-1618  number                    0.2
1618-1619  punctuation               )
1620-1621  punctuation               {
1626-1633  builtin                   console
1633-1634  punctuation               .
1634-1637  function                  log
1637-1638  punctuation               (
1638-1654  string                    'else if branch'
1654-1655  punctuation               )
1655-1656  punctuation               ;
1660-1661  punctuation               }
1662-1666  special_keyword           else
1667-1668  punctuation               {
1673-1680  builtin                   console
1680-1681  punctuation               .
1681-1684  function                  log
1684-1685  punctuation               (
1685-1698  string                    'else branch'
1698-1699  punctuation               )
1699-1700  punctuation               ;
1704-1705  punctuation               }
1708-1709  punctuation               }
1710-1715  special_keyword           catch
1716-1717  punctuation               (
1722-1723  operator                  :
1724-1731  builtin                   unknown
1731-1732  punctuation               )
1733-1734  punctuation               {
1738-1745  builtin                   console
1745-1746  punctuation               .
1746-1751  function                  error
1751-1752  punctuation               (
1757-1758  punctuation               )
1758-1759  punctuation               ;
1762-1763  punctuation               }
1764-1771  special_keyword           finally
1772-1773  punctuation               {
1777-1784  builtin                   console
1784-1785  punctuation               .
1785-1788  function                  log
1788-1789  punctuation               (
1789-1804  string                    'finally block'
1804-1805  punctuation               )
1805-1806  punctuation               ;
1809-1810  punctuation               }
1812-1813  punctuation               }
1814-1815  punctuation               }
1817-1827  comment                   // comment
1829-1872  comment                   /*\nother comment\n\nconst comment = false;\n*/
1874-1898  comment                   /**\n * JSDoc comment\n */
1900-1906  special_keyword           import
1907-1908  punctuation               {
1920-1921  punctuation               ,
1922-1926  keyword                   type
1927-1938  class_name                Sample_Lang
1927-1938  capitalized_identifier    Sample_Lang
1938-1939  punctuation               }
1940-1944  special_keyword           from
1945-1964  string                    '../code_sample.js'
1964-1965  punctuation               ;
1966-1972  special_keyword           import
1973-1974  operator                  *
1975-1977  special_keyword           as
1978-1979  constant                  A
1980-1984  special_keyword           from
1985-2004  string                    '../code_sample.js'
2004-2005  punctuation               ;
2007-2013  special_keyword           export
2014-2015  punctuation               {
2016-2017  punctuation               ,
2018-2019  constant                  A
2019-2020  punctuation               ,
2022-2023  punctuation               ,
2025-2026  punctuation               ,
2027-2028  constant                  D
2028-2029  punctuation               }
2029-2030  punctuation               ;
2045-2047  special_keyword           as
2048-2055  builtin                   unknown
2056-2058  special_keyword           as
2059-2070  capitalized_identifier    Sample_Lang
2071-2080  keyword                   satisfies
2081-2092  capitalized_identifier    Sample_Lang
2092-2093  punctuation               ;
2095-2101  special_keyword           export
2102-2111  keyword                   interface
2112-2128  class_name                Some_E<T = null>
2112-2118  capitalized_identifier    Some_E
2118-2119  operator                  <
2119-2120  constant                  T
2121-2122  operator                  =
2123-2127  keyword                   null
2127-2128  operator                  >
2129-2130  punctuation               {
2136-2137  operator                  :
2138-2144  builtin                   string
2144-2145  punctuation               ;
2150-2151  operator                  :
2152-2158  builtin                   number
2158-2159  punctuation               ;
2162-2163  operator                  ?
2163-2164  operator                  :
2165-2166  constant                  T
2166-2167  punctuation               ;
2168-2169  punctuation               }
2171-2176  keyword                   const
2178-2179  operator                  :
2180-2181  punctuation               {
2185-2186  operator                  :
2187-2193  builtin                   string
2193-2194  punctuation               ;
2198-2199  operator                  :
2200-2206  builtin                   number
2206-2207  punctuation               }
2208-2209  operator                  =
2210-2211  punctuation               {
2215-2216  operator                  :
2217-2224  string                    'A. H.'
2224-2225  punctuation               ,
2229-2230  operator                  :
2231-2234  number                    100
2234-2235  punctuation               }
2235-2236  punctuation               ;
2237-2242  keyword                   const
2245-2246  operator                  =
2247-2248  punctuation               [
2248-2249  punctuation               [
2249-2251  string                    ''
2251-2252  punctuation               ,
2254-2255  punctuation               ]
2255-2256  punctuation               ]
2257-2259  special_keyword           as
2260-2265  keyword                   const
2265-2266  punctuation               ;
2267-2273  special_keyword           export
2274-2279  keyword                   const
2286-2308  type_annotation           : Map<string, Some_E> 
2286-2287  :                         :
2287-2308  type                       Map<string, Some_E> 
2288-2291  capitalized_identifier    Map
2291-2292  operator                  <
2292-2298  builtin                   string
2298-2299  punctuation               ,
2300-2306  capitalized_identifier    Some_E
2306-2307  operator                  >
2308-2309  operator                  =
2310-2313  keyword                   new
2314-2317  class_name                Map
2314-2317  capitalized_identifier    Map
2317-2318  punctuation               (
2319-2320  punctuation               )
2320-2321  punctuation               ;
2323-2329  special_keyword           export
2330-2338  keyword                   function
2339-2342  function                  add
2342-2343  punctuation               (
2344-2345  operator                  :
2346-2352  builtin                   number
2352-2353  punctuation               ,
2355-2356  operator                  :
2357-2363  builtin                   number
2363-2364  punctuation               )
2364-2365  operator                  :
2366-2372  builtin                   number
2373-2374  punctuation               {
2376-2382  special_keyword           return
2385-2386  operator                  +
2388-2389  punctuation               ;
2390-2391  punctuation               }
2393-2399  special_keyword           export
2400-2405  keyword                   const
2406-2410  function_variable         plus
2411-2412  operator                  =
2413-2414  punctuation               (
2415-2416  operator                  :
2417-2420  builtin                   any
2420-2421  punctuation               ,
2423-2424  operator                  :
2425-2428  builtin                   any
2428-2429  punctuation               )
2429-2435  type_annotation           : any 
2429-2430  :                         :
2430-2435  type                       any 
2431-2434  builtin                   any
2435-2437  operator                  =>
2440-2441  operator                  +
2443-2444  punctuation               ;
2446-2468  comment                   // boundary test cases
2469-2475  special_keyword           export
2476-2481  keyword                   const
2500-2501  operator                  =
2502-2531  string                    'const class function string'
2531-2532  punctuation               ;
2533-2539  special_keyword           export
2540-2545  keyword                   const
2563-2564  operator                  =
2565-2591  string                    '// this is not a comment'
2591-2592  punctuation               ;
2593-2599  special_keyword           export
2600-2605  keyword                   const
2625-2626  operator                  =
2627-2644  template_string           `Value: ${1 + 2}`
2627-2628  template_punctuation      `
2628-2635  string                    Value: 
2635-2643  interpolation             ${1 + 2}
2635-2637  interpolation_punctuation ${
2637-2638  number                    1
2639-2640  operator                  +
2641-2642  number                    2
2642-2643  interpolation_punctuation }
2643-2644  template_punctuation      `
2644-2645  punctuation               ;
2647-2679  comment                   // regex that looks like comment
2680-2686  special_keyword           export
2687-2692  keyword                   const
2699-2700  operator                  =
2701-2710  regex                     /\/\/.*/g
2701-2702  regex_delimiter           /
2702-2708  regex_source              \/\/.*
2708-2709  regex_delimiter           /
2709-2710  regex_flags               g
2710-2711  punctuation               ;
2712-2718  special_keyword           export
2719-2724  keyword                   const
2739-2740  operator                  =
2741-2773  regex                     /^(?:\/\*.*?\*\/|\/\/.*|[^/])+$/
2741-2742  regex_delimiter           /
2742-2772  regex_source              ^(?:\/\*.*?\*\/|\/\/.*|[^/])+$
2772-2773  regex_delimiter           /
2773-2774  punctuation               ;
2776-2832  comment                   // string in comment should not be highlighted as string
2833-2884  comment                   // const commented = "this string is in a comment";
