=== TOKENS ===
   0-5     keyword                   const
   8-9     operator                  =
  10-11    number                    1
  11-12    punctuation               ;
  14-19    keyword                   const
  22-23    operator                  =
  24-27    string                    'b'
  27-28    punctuation               ;
  30-35    keyword                   const
  38-39    operator                  =
  40-44    boolean                   true
  44-45    punctuation               ;
  47-53    keyword                   export
  54-58    keyword                   type
  59-68    class_name                Some_Type
  69-70    operator                  =
  71-72    number                    1
  73-74    operator                  |
  75-78    string                    'b'
  79-80    operator                  |
  81-85    boolean                   true
  85-86    punctuation               ;
  88-93    keyword                   class
  94-95    class_name                D
  94-95    constant                  D
  96-97    punctuation               {
 101-102   operator                  :
 103-109   builtin                   string
 110-111   operator                  =
 112-115   string                    'd'
 115-116   punctuation               ;
 120-121   operator                  :
 122-128   builtin                   number
 128-129   punctuation               ;
 134-135   operator                  =
 136-142   function                  $state
 142-143   punctuation               (
 143-147   keyword                   null
 147-148   punctuation               )
 148-149   punctuation               ;
 152-163   function                  constructor
 163-164   punctuation               (
 166-167   operator                  :
 168-174   builtin                   number
 174-175   punctuation               )
 176-177   punctuation               {
 180-184   keyword                   this
 184-185   punctuation               .
 188-189   operator                  =
 192-193   punctuation               ;
 195-196   punctuation               }
 199-211   function                  class_method
 211-212   punctuation               (
 212-213   punctuation               )
 213-214   operator                  :
 215-221   builtin                   string
 222-223   punctuation               {
 226-232   keyword                   return
 233-252   template_string           `Hello, ${this.d1}`
 233-234   template_punctuation      `
 234-241   string                    Hello, 
 241-251   interpolation             ${this.d1}
 241-243   interpolation_punctuation ${
 243-247   keyword                   this
 247-248   punctuation               .
 250-251   interpolation_punctuation }
 251-252   template_punctuation      `
 252-253   punctuation               ;
 255-256   punctuation               }
 275-276   operator                  =
 277-278   punctuation               (
 278-279   punctuation               )
 279-280   operator                  :
 281-285   keyword                   void
 286-288   operator                  =>
 289-290   punctuation               {
 293-302   comment                   /* ... */
 305-308   keyword                   for
 309-310   punctuation               (
 310-315   keyword                   const
 319-321   keyword                   of
 322-326   keyword                   this
 326-327   punctuation               .
 329-330   punctuation               )
 331-332   punctuation               {
 336-340   keyword                   this
 340-341   punctuation               .
 341-356   function                  #private_method
 356-357   punctuation               (
 358-359   punctuation               ,
 362-363   punctuation               )
 363-364   punctuation               ;
 367-368   punctuation               }
 371-377   comment                   // foo
 379-380   punctuation               }
 380-381   punctuation               ;
 384-399   function                  #private_method
 399-400   punctuation               (
 402-403   operator                  :
 404-410   builtin                   number
 410-411   punctuation               ,
 414-415   operator                  :
 416-419   builtin                   any
 419-420   punctuation               )
 421-422   punctuation               {
 425-430   keyword                   throw
 431-434   keyword                   new
 435-440   class_name                Error
 440-441   punctuation               (
 441-488   template_string           `${this.d1} \n\t\t\tmultiline\n\t\t\tetc ${a2 + c2}\n\t\t`
 441-442   template_punctuation      `
 442-452   interpolation             ${this.d1}
 442-444   interpolation_punctuation ${
 444-448   keyword                   this
 448-449   punctuation               .
 451-452   interpolation_punctuation }
 452-474   string                     \n\t\t\tmultiline\n\t\t\tetc 
 474-484   interpolation             ${a2 + c2}
 474-476   interpolation_punctuation ${
 479-480   operator                  +
 483-484   interpolation_punctuation }
 484-487   string                    \n\t\t
 487-488   template_punctuation      `
 488-489   punctuation               )
 489-490   punctuation               ;
 492-493   punctuation               }
 496-505   keyword                   protected
 506-522   function                  protected_method
 522-523   punctuation               (
 523-524   punctuation               )
 524-525   operator                  :
 526-530   keyword                   void
 531-532   punctuation               {
 535-542   builtin                   console
 542-543   punctuation               .
 543-546   function                  log
 546-547   punctuation               (
 547-550   keyword                   new
 551-555   class_name                Date
 555-556   punctuation               (
 556-557   punctuation               )
 557-558   punctuation               )
 558-559   punctuation               ;
 560-593   comment                   // eslint-disable-line no-console
 595-596   punctuation               }
 597-598   punctuation               }
 600-610   comment                   // comment
 612-655   comment                   /*\nother comment\n\nconst comment = false;\n*/
 657-681   comment                   /**\n * JSDoc comment\n */
 683-689   keyword                   import
 690-691   punctuation               {
 703-704   punctuation               ,
 705-709   keyword                   type
 710-721   class_name                Code_Sample
 721-722   punctuation               ,
 723-727   keyword                   type
 728-739   class_name                Sample_Lang
 739-740   punctuation               }
 741-745   keyword                   from
 746-765   string                    '../code_sample.js'
 765-766   punctuation               ;
 767-773   keyword                   import
 774-775   operator                  *
 776-778   keyword                   as
 779-780   constant                  A
 781-785   keyword                   from
 786-805   string                    '../code_sample.js'
 805-806   punctuation               ;
 821-823   keyword                   as
 824-831   builtin                   unknown
 832-834   keyword                   as
 847-849   keyword                   as
 850-853   builtin                   any
 854-856   keyword                   as
 868-869   punctuation               ;
 871-877   keyword                   export
 878-879   punctuation               {
 880-881   punctuation               ,
 882-883   constant                  A
 883-884   punctuation               ,
 886-887   punctuation               ,
 889-890   punctuation               ,
 891-892   constant                  D
 892-893   punctuation               }
 893-894   punctuation               ;
 896-902   keyword                   export
 903-912   keyword                   interface
 913-919   class_name                Some_E
 920-921   punctuation               {
 927-928   operator                  :
 929-935   builtin                   string
 935-936   punctuation               ;
 941-942   operator                  :
 943-949   builtin                   number
 949-950   punctuation               ;
 951-952   punctuation               }
 954-960   keyword                   export
 961-966   keyword                   const
 973-974   operator                  :
 982-983   operator                  =
 984-985   punctuation               {
 989-990   operator                  :
 991-998   string                    'A. H.'
 998-999   punctuation               ,
1003-1004  operator                  :
1005-1008  number                    100
1008-1009  punctuation               }
1009-1010  punctuation               ;
1012-1018  keyword                   export
1019-1027  keyword                   function
1028-1031  function                  add
1031-1032  punctuation               (
1033-1034  operator                  :
1035-1041  builtin                   number
1041-1042  punctuation               ,
1044-1045  operator                  :
1046-1052  builtin                   number
1052-1053  punctuation               )
1053-1054  operator                  :
1055-1061  builtin                   number
1062-1063  punctuation               {
1065-1071  keyword                   return
1074-1075  operator                  +
1077-1078  punctuation               ;
1079-1080  punctuation               }
1082-1088  keyword                   export
1089-1094  keyword                   const
1100-1101  operator                  =
1102-1103  punctuation               (
1104-1105  operator                  :
1106-1109  builtin                   any
1109-1110  punctuation               ,
1112-1113  operator                  :
1114-1117  builtin                   any
1117-1118  punctuation               )
1118-1119  operator                  :
1120-1123  builtin                   any
1124-1126  operator                  =>
1129-1130  operator                  +
1132-1133  punctuation               ;
1135-1157  comment                   // boundary test cases
1158-1164  keyword                   export
1165-1170  keyword                   const
1189-1190  operator                  =
1191-1220  string                    'const class function string'
1220-1221  punctuation               ;
1222-1228  keyword                   export
1229-1234  keyword                   const
1252-1253  operator                  =
1254-1280  string                    '// this is not a comment'
1280-1281  punctuation               ;
1282-1288  keyword                   export
1289-1294  keyword                   const
1314-1315  operator                  =
1316-1333  template_string           `Value: ${1 + 2}`
1316-1317  template_punctuation      `
1317-1324  string                    Value: 
1324-1332  interpolation             ${1 + 2}
1324-1326  interpolation_punctuation ${
1326-1327  number                    1
1328-1329  operator                  +
1330-1331  number                    2
1331-1332  interpolation_punctuation }
1332-1333  template_punctuation      `
1333-1334  punctuation               ;
1336-1368  comment                   // regex that looks like comment
1369-1375  keyword                   export
1376-1381  keyword                   const
1388-1389  operator                  =
1390-1399  regex                     /\/\/.*/g
1390-1391  regex_delimiter           /
1391-1397  regex_source              \/\/.*
1397-1398  regex_delimiter           /
1398-1399  regex_flags               g
1399-1400  punctuation               ;
1401-1407  keyword                   export
1408-1413  keyword                   const
1428-1429  operator                  =
1430-1462  regex                     /^(?:\/\*.*?\*\/|\/\/.*|[^/])+$/
1430-1431  regex_delimiter           /
1431-1461  regex_source              ^(?:\/\*.*?\*\/|\/\/.*|[^/])+$
1461-1462  regex_delimiter           /
1462-1463  punctuation               ;
1465-1521  comment                   // string in comment should not be highlighted as string
1522-1573  comment                   // const commented = "this string is in a comment";

=== STATS ===
Total tokens: 285
Sample length: 1574 characters

Token types:
  punctuation: 94
  keyword: 53
  operator: 43
  builtin: 17
  string: 12
  comment: 10
  function: 8
  interpolation_punctuation: 8
  class_name: 7
  template_punctuation: 6
  number: 5
  constant: 4
  interpolation: 4
  regex_delimiter: 4
  template_string: 3
  boolean: 2
  regex: 2
  regex_source: 2
  regex_flags: 1
