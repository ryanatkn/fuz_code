=== TOKENS ===
   0-5     keyword                   const
   8-9     operator                  =
  10-11    number                    1
  11-12    punctuation               ;
  14-19    keyword                   const
  22-23    operator                  =
  24-27    string                    'b'
  27-28    punctuation               ;
  30-35    keyword                   const
  38-39    operator                  =
  40-44    boolean                   true
  44-45    punctuation               ;
  47-53    special_keyword           export
  54-58    keyword                   type
  59-68    class_name                Some_Type
  69-70    operator                  =
  71-72    number                    1
  73-74    operator                  |
  75-78    string                    'b'
  79-80    operator                  |
  81-85    boolean                   true
  85-86    punctuation               ;
  88-95    keyword                   declare
  96-101   keyword                   const
 117-118   operator                  :
 119-122   builtin                   any
 122-123   punctuation               ,
 142-143   operator                  :
 144-147   builtin                   any
 147-148   punctuation               ,
 165-166   operator                  :
 167-170   builtin                   any
 170-171   punctuation               ;
 173-181   keyword                   abstract
 182-187   keyword                   class
 188-192   class_name                Base
 193-194   punctuation               {
 196-204   keyword                   abstract
 205-220   function                  abstract_method
 220-221   punctuation               (
 221-222   punctuation               )
 222-223   operator                  :
 224-228   keyword                   void
 228-229   punctuation               ;
 230-231   punctuation               }
 233-249   decorator                 @class_decorator
 233-234   at                        @
 234-249   function                  class_decorator
 250-255   keyword                   class
 256-257   class_name                D
 256-257   constant                  D
 258-265   keyword                   extends
 266-270   class_name                Base
 271-272   punctuation               {
 274-282   keyword                   readonly
 285-286   operator                  :
 287-293   builtin                   string
 294-295   operator                  =
 296-299   string                    'd'
 299-300   punctuation               ;
 304-305   operator                  :
 306-312   builtin                   number
 312-313   punctuation               ;
 318-319   operator                  =
 320-326   function                  $state
 326-327   punctuation               (
 327-331   keyword                   null
 331-332   punctuation               )
 332-333   punctuation               ;
 336-355   decorator                 @property_decorator
 336-337   at                        @
 337-355   function                  property_decorator
 367-368   operator                  =
 369-373   boolean                   true
 373-374   punctuation               ;
 377-388   function                  constructor
 388-389   punctuation               (
 391-392   operator                  :
 393-399   builtin                   number
 399-400   punctuation               )
 401-402   punctuation               {
 405-410   keyword                   super
 410-411   punctuation               (
 411-412   punctuation               )
 412-413   punctuation               ;
 416-420   keyword                   this
 420-421   punctuation               .
 424-425   operator                  =
 428-429   punctuation               ;
 431-432   punctuation               }
 435-450   function                  abstract_method
 450-451   punctuation               (
 451-452   punctuation               )
 452-453   operator                  :
 454-458   keyword                   void
 459-460   punctuation               {
 463-480   comment                   // implementation
 482-483   punctuation               }
 486-503   decorator                 @method_decorator
 486-487   at                        @
 487-503   function                  method_decorator
 503-504   punctuation               (
 504-513   string                    'example'
 513-514   punctuation               ,
 515-516   punctuation               {
 522-523   operator                  :
 524-528   boolean                   true
 528-529   punctuation               }
 529-530   punctuation               )
 532-544   function                  class_method
 544-545   punctuation               (
 545-546   punctuation               )
 546-547   operator                  :
 548-554   builtin                   string
 555-556   punctuation               {
 559-565   special_keyword           return
 566-585   template_string           `Hello, ${this.d1}`
 566-567   template_punctuation      `
 567-574   string                    Hello, 
 574-584   interpolation             ${this.d1}
 574-576   interpolation_punctuation ${
 576-580   keyword                   this
 580-581   punctuation               .
 583-584   interpolation_punctuation }
 584-585   template_punctuation      `
 585-586   punctuation               ;
 588-589   punctuation               }
 592-607   function_variable         instance_method
 608-609   operator                  =
 610-611   punctuation               (
 611-612   punctuation               )
 612-613   operator                  :
 614-618   keyword                   void
 619-621   operator                  =>
 622-623   punctuation               {
 626-635   comment                   /* ... */
 638-641   keyword                   let
 644-645   operator                  =
 646-647   number                    0
 647-648   punctuation               ;
 651-653   special_keyword           do
 654-655   punctuation               {
 660-662   operator                  ++
 662-663   punctuation               ;
 666-667   punctuation               }
 668-673   special_keyword           while
 674-675   punctuation               (
 677-678   operator                  <
 679-680   number                    3
 680-681   punctuation               )
 681-682   punctuation               ;
 686-689   special_keyword           for
 690-691   punctuation               (
 691-696   keyword                   const
 700-702   keyword                   of
 703-707   keyword                   this
 707-708   punctuation               .
 710-711   punctuation               )
 712-713   punctuation               {
 717-719   special_keyword           if
 720-721   punctuation               (
 724-727   operator                  ===
 728-731   string                    'd'
 731-732   punctuation               )
 733-741   special_keyword           continue
 741-742   punctuation               ;
 746-748   special_keyword           if
 749-750   punctuation               (
 750-751   operator                  !
 753-754   punctuation               )
 755-760   special_keyword           break
 760-761   punctuation               ;
 765-769   keyword                   this
 769-770   punctuation               .
 770-785   function                  #private_method
 785-786   punctuation               (
 787-788   punctuation               ,
 791-792   punctuation               )
 792-793   punctuation               ;
 796-797   punctuation               }
 801-807   special_keyword           switch
 808-809   punctuation               (
 809-813   keyword                   this
 813-814   punctuation               .
 816-817   punctuation               )
 818-819   punctuation               {
 823-827   special_keyword           case
 828-831   string                    'a'
 831-832   operator                  :
 837-844   builtin                   console
 844-845   punctuation               .
 845-848   function                  log
 848-849   punctuation               (
 849-857   string                    'case a'
 857-858   punctuation               )
 858-859   punctuation               ;
 864-869   special_keyword           break
 869-870   punctuation               ;
 874-878   special_keyword           case
 879-882   string                    'b'
 882-883   operator                  :
 887-891   special_keyword           case
 892-895   string                    'c'
 895-896   operator                  :
 901-908   builtin                   console
 908-909   punctuation               .
 909-912   function                  log
 912-913   punctuation               (
 913-926   string                    'case b or c'
 926-927   punctuation               )
 927-928   punctuation               ;
 933-938   special_keyword           break
 938-939   punctuation               ;
 943-950   special_keyword           default
 950-951   operator                  :
 956-963   builtin                   console
 963-964   punctuation               .
 964-967   function                  log
 967-968   punctuation               (
 968-977   string                    'default'
 977-978   punctuation               )
 978-979   punctuation               ;
 982-983   punctuation               }
 987-992   keyword                   const
 996-997   operator                  :
 998-999   punctuation               {
1005-1006  operator                  ?
1006-1007  operator                  :
1008-1015  builtin                   boolean
1015-1016  punctuation               ;
1021-1022  operator                  :
1023-1030  builtin                   boolean
1030-1031  punctuation               }
1032-1033  operator                  =
1034-1035  punctuation               {
1045-1046  operator                  :
1047-1051  string                    'd1'
1052-1054  keyword                   in
1055-1059  keyword                   this
1059-1060  punctuation               ,
1068-1069  operator                  :
1070-1074  keyword                   this
1075-1085  keyword                   instanceof
1086-1087  class_name                D
1086-1087  constant                  D
1087-1088  punctuation               ,
1091-1092  punctuation               }
1092-1093  punctuation               ;
1096-1102  keyword                   delete
1106-1107  punctuation               .
1113-1114  punctuation               ;
1117-1123  comment                   // foo
1125-1126  punctuation               }
1126-1127  punctuation               ;
1130-1145  function                  #private_method
1145-1146  punctuation               (
1148-1149  operator                  :
1150-1156  builtin                   number
1156-1157  punctuation               ,
1160-1161  operator                  :
1162-1165  builtin                   any
1165-1166  punctuation               )
1167-1168  punctuation               {
1171-1176  special_keyword           throw
1177-1180  keyword                   new
1181-1186  class_name                Error
1186-1187  punctuation               (
1187-1233  template_string           `${this.d1}\n\t\t\tmultiline\n\t\t\tetc ${a2 + c2}\n\t\t`
1187-1188  template_punctuation      `
1188-1198  interpolation             ${this.d1}
1188-1190  interpolation_punctuation ${
1190-1194  keyword                   this
1194-1195  punctuation               .
1197-1198  interpolation_punctuation }
1198-1219  string                    \n\t\t\tmultiline\n\t\t\tetc 
1219-1229  interpolation             ${a2 + c2}
1219-1221  interpolation_punctuation ${
1224-1225  operator                  +
1228-1229  interpolation_punctuation }
1229-1232  string                    \n\t\t
1232-1233  template_punctuation      `
1233-1234  punctuation               )
1234-1235  punctuation               ;
1237-1238  punctuation               }
1241-1242  operator                  *
1242-1251  function                  generator
1251-1252  punctuation               (
1252-1253  punctuation               )
1254-1255  punctuation               {
1258-1263  special_keyword           yield
1264-1265  number                    1
1265-1266  punctuation               ;
1269-1274  special_keyword           yield
1274-1275  operator                  *
1276-1277  punctuation               [
1277-1278  number                    2
1278-1279  punctuation               ,
1280-1281  number                    3
1281-1282  punctuation               ]
1282-1283  punctuation               ;
1285-1286  punctuation               }
1295-1296  operator                  *
1296-1311  function                  async_generator
1311-1312  punctuation               (
1312-1313  punctuation               )
1314-1315  punctuation               {
1318-1323  special_keyword           yield
1324-1329  special_keyword           await
1330-1337  builtin                   Promise
1337-1338  punctuation               .
1338-1345  function                  resolve
1345-1346  punctuation               (
1346-1347  number                    4
1347-1348  punctuation               )
1348-1349  punctuation               ;
1351-1352  punctuation               }
1355-1364  keyword                   protected
1365-1370  keyword                   async
1371-1387  function                  protected_method
1387-1388  punctuation               (
1388-1389  punctuation               )
1389-1390  operator                  :
1391-1398  builtin                   Promise
1398-1399  operator                  <
1399-1403  keyword                   void
1403-1404  operator                  >
1405-1406  punctuation               {
1409-1412  special_keyword           try
1413-1414  punctuation               {
1418-1423  special_keyword           await
1424-1427  keyword                   new
1428-1435  class_name                Promise
1428-1435  builtin                   Promise
1435-1436  punctuation               (
1436-1437  punctuation               (
1444-1445  punctuation               )
1446-1448  operator                  =>
1449-1459  function                  setTimeout
1459-1460  punctuation               (
1467-1468  punctuation               ,
1469-1472  number                    100
1472-1473  punctuation               )
1473-1474  punctuation               )
1474-1475  punctuation               ;
1479-1481  special_keyword           if
1482-1483  punctuation               (
1487-1488  punctuation               .
1488-1494  function                  random
1494-1495  punctuation               (
1495-1496  punctuation               )
1497-1498  operator                  >
1499-1502  number                    0.5
1502-1503  punctuation               )
1504-1505  punctuation               {
1510-1517  builtin                   console
1517-1518  punctuation               .
1518-1521  function                  log
1521-1522  punctuation               (
1522-1525  keyword                   new
1526-1530  class_name                Date
1530-1531  punctuation               (
1531-1532  punctuation               )
1532-1533  punctuation               )
1533-1534  punctuation               ;
1535-1568  comment                   // eslint-disable-line no-console
1572-1573  punctuation               }
1574-1578  special_keyword           else
1579-1581  special_keyword           if
1582-1583  punctuation               (
1587-1588  punctuation               .
1588-1594  function                  random
1594-1595  punctuation               (
1595-1596  punctuation               )
1597-1598  operator                  >
1599-1602  number                    0.2
1602-1603  punctuation               )
1604-1605  punctuation               {
1610-1617  builtin                   console
1617-1618  punctuation               .
1618-1621  function                  log
1621-1622  punctuation               (
1622-1638  string                    'else if branch'
1638-1639  punctuation               )
1639-1640  punctuation               ;
1644-1645  punctuation               }
1646-1650  special_keyword           else
1651-1652  punctuation               {
1657-1664  builtin                   console
1664-1665  punctuation               .
1665-1668  function                  log
1668-1669  punctuation               (
1669-1682  string                    'else branch'
1682-1683  punctuation               )
1683-1684  punctuation               ;
1688-1689  punctuation               }
1692-1693  punctuation               }
1694-1699  special_keyword           catch
1700-1701  punctuation               (
1706-1707  operator                  :
1708-1715  builtin                   unknown
1715-1716  punctuation               )
1717-1718  punctuation               {
1722-1729  builtin                   console
1729-1730  punctuation               .
1730-1735  function                  error
1735-1736  punctuation               (
1741-1742  punctuation               )
1742-1743  punctuation               ;
1746-1747  punctuation               }
1748-1755  special_keyword           finally
1756-1757  punctuation               {
1761-1768  builtin                   console
1768-1769  punctuation               .
1769-1772  function                  log
1772-1773  punctuation               (
1773-1788  string                    'finally block'
1788-1789  punctuation               )
1789-1790  punctuation               ;
1793-1794  punctuation               }
1796-1797  punctuation               }
1798-1799  punctuation               }
1801-1811  comment                   // comment
1813-1856  comment                   /*\nother comment\n\nconst comment = false;\n*/
1858-1882  comment                   /**\n * JSDoc comment\n */
1884-1890  special_keyword           import
1891-1892  punctuation               {
1904-1905  punctuation               ,
1906-1910  keyword                   type
1911-1922  class_name                Sample_Lang
1922-1923  punctuation               }
1924-1928  special_keyword           from
1929-1948  string                    '../code_sample.js'
1948-1949  punctuation               ;
1950-1956  special_keyword           import
1957-1958  operator                  *
1959-1961  special_keyword           as
1962-1963  constant                  A
1964-1968  special_keyword           from
1969-1988  string                    '../code_sample.js'
1988-1989  punctuation               ;
1991-1997  special_keyword           export
1998-1999  punctuation               {
2000-2001  punctuation               ,
2002-2003  constant                  A
2003-2004  punctuation               ,
2006-2007  punctuation               ,
2009-2010  punctuation               ,
2011-2012  constant                  D
2012-2013  punctuation               }
2013-2014  punctuation               ;
2029-2031  special_keyword           as
2032-2039  builtin                   unknown
2040-2042  special_keyword           as
2043-2046  builtin                   any
2047-2049  special_keyword           as
2062-2071  keyword                   satisfies
2083-2084  punctuation               ;
2086-2092  special_keyword           export
2093-2102  keyword                   interface
2103-2109  class_name                Some_E
2110-2111  punctuation               {
2117-2118  operator                  :
2119-2125  builtin                   string
2125-2126  punctuation               ;
2131-2132  operator                  :
2133-2139  builtin                   number
2139-2140  punctuation               ;
2141-2142  punctuation               }
2144-2150  special_keyword           export
2151-2156  keyword                   const
2163-2164  operator                  :
2172-2173  operator                  =
2174-2175  punctuation               {
2179-2180  operator                  :
2181-2188  string                    'A. H.'
2188-2189  punctuation               ,
2193-2194  operator                  :
2195-2198  number                    100
2198-2199  punctuation               }
2199-2200  punctuation               ;
2202-2208  special_keyword           export
2209-2217  keyword                   function
2218-2221  function                  add
2221-2222  punctuation               (
2223-2224  operator                  :
2225-2231  builtin                   number
2231-2232  punctuation               ,
2234-2235  operator                  :
2236-2242  builtin                   number
2242-2243  punctuation               )
2243-2244  operator                  :
2245-2251  builtin                   number
2252-2253  punctuation               {
2255-2261  special_keyword           return
2264-2265  operator                  +
2267-2268  punctuation               ;
2269-2270  punctuation               }
2272-2278  special_keyword           export
2279-2284  keyword                   const
2285-2289  function_variable         plus
2290-2291  operator                  =
2292-2293  punctuation               (
2294-2295  operator                  :
2296-2299  builtin                   any
2299-2300  punctuation               ,
2302-2303  operator                  :
2304-2307  builtin                   any
2307-2308  punctuation               )
2308-2309  operator                  :
2310-2313  builtin                   any
2314-2316  operator                  =>
2319-2320  operator                  +
2322-2323  punctuation               ;
2325-2347  comment                   // boundary test cases
2348-2354  special_keyword           export
2355-2360  keyword                   const
2379-2380  operator                  =
2381-2410  string                    'const class function string'
2410-2411  punctuation               ;
2412-2418  special_keyword           export
2419-2424  keyword                   const
2442-2443  operator                  =
2444-2470  string                    '// this is not a comment'
2470-2471  punctuation               ;
2472-2478  special_keyword           export
2479-2484  keyword                   const
2504-2505  operator                  =
2506-2523  template_string           `Value: ${1 + 2}`
2506-2507  template_punctuation      `
2507-2514  string                    Value: 
2514-2522  interpolation             ${1 + 2}
2514-2516  interpolation_punctuation ${
2516-2517  number                    1
2518-2519  operator                  +
2520-2521  number                    2
2521-2522  interpolation_punctuation }
2522-2523  template_punctuation      `
2523-2524  punctuation               ;
2526-2558  comment                   // regex that looks like comment
2559-2565  special_keyword           export
2566-2571  keyword                   const
2578-2579  operator                  =
2580-2589  regex                     /\/\/.*/g
2580-2581  regex_delimiter           /
2581-2587  regex_source              \/\/.*
2587-2588  regex_delimiter           /
2588-2589  regex_flags               g
2589-2590  punctuation               ;
2591-2597  special_keyword           export
2598-2603  keyword                   const
2618-2619  operator                  =
2620-2652  regex                     /^(?:\/\*.*?\*\/|\/\/.*|[^/])+$/
2620-2621  regex_delimiter           /
2621-2651  regex_source              ^(?:\/\*.*?\*\/|\/\/.*|[^/])+$
2651-2652  regex_delimiter           /
2652-2653  punctuation               ;
2655-2711  comment                   // string in comment should not be highlighted as string
2712-2763  comment                   // const commented = "this string is in a comment";

=== STATS ===
Total tokens: 558
Sample length: 2764 characters

Token types:
  punctuation: 221
  operator: 75
  keyword: 49
  special_keyword: 48
  builtin: 33
  function: 26
  string: 24
  number: 14
  comment: 11
  class_name: 10
  interpolation_punctuation: 8
  template_punctuation: 6
  constant: 5
  boolean: 4
  interpolation: 4
  regex_delimiter: 4
  decorator: 3
  at: 3
  template_string: 3
  function_variable: 2
  regex: 2
  regex_source: 2
  regex_flags: 1
