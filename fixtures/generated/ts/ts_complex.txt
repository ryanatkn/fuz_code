=== TOKENS ===
   0-5     keyword                   const
   8-9     operator                  =
  10-11    number                    1
  11-12    punctuation               ;
  14-19    keyword                   const
  22-23    operator                  =
  24-27    string                    'b'
  27-28    punctuation               ;
  30-35    keyword                   const
  38-39    operator                  =
  40-44    boolean                   true
  44-45    punctuation               ;
  47-53    special_keyword           export
  54-58    keyword                   type
  59-68    class_name                Some_Type
  69-70    operator                  =
  71-72    number                    1
  73-74    operator                  |
  75-78    string                    'b'
  79-80    operator                  |
  81-85    boolean                   true
  85-86    punctuation               ;
  88-93    keyword                   class
  94-95    class_name                D
  94-95    constant                  D
  96-97    punctuation               {
 101-102   operator                  :
 103-109   builtin                   string
 110-111   operator                  =
 112-115   string                    'd'
 115-116   punctuation               ;
 120-121   operator                  :
 122-128   builtin                   number
 128-129   punctuation               ;
 134-135   operator                  =
 136-142   function                  $state
 142-143   punctuation               (
 143-147   keyword                   null
 147-148   punctuation               )
 148-149   punctuation               ;
 152-163   function                  constructor
 163-164   punctuation               (
 166-167   operator                  :
 168-174   builtin                   number
 174-175   punctuation               )
 176-177   punctuation               {
 180-184   keyword                   this
 184-185   punctuation               .
 188-189   operator                  =
 192-193   punctuation               ;
 195-196   punctuation               }
 199-211   function                  class_method
 211-212   punctuation               (
 212-213   punctuation               )
 213-214   operator                  :
 215-221   builtin                   string
 222-223   punctuation               {
 226-232   special_keyword           return
 233-252   template_string           `Hello, ${this.d1}`
 233-234   template_punctuation      `
 234-241   string                    Hello, 
 241-251   interpolation             ${this.d1}
 241-243   interpolation_punctuation ${
 243-247   keyword                   this
 247-248   punctuation               .
 250-251   interpolation_punctuation }
 251-252   template_punctuation      `
 252-253   punctuation               ;
 255-256   punctuation               }
 275-276   operator                  =
 277-278   punctuation               (
 278-279   punctuation               )
 279-280   operator                  :
 281-285   keyword                   void
 286-288   operator                  =>
 289-290   punctuation               {
 293-302   comment                   /* ... */
 305-308   keyword                   let
 311-312   operator                  =
 313-314   number                    0
 314-315   punctuation               ;
 318-323   special_keyword           while
 324-325   punctuation               (
 327-328   operator                  <
 329-330   number                    3
 330-331   punctuation               )
 333-335   operator                  ++
 335-336   punctuation               ;
 339-342   special_keyword           for
 343-344   punctuation               (
 344-349   keyword                   const
 353-355   keyword                   of
 356-360   keyword                   this
 360-361   punctuation               .
 363-364   punctuation               )
 365-366   punctuation               {
 370-372   special_keyword           if
 373-374   punctuation               (
 377-380   operator                  ===
 381-384   string                    'd'
 384-385   punctuation               )
 386-394   special_keyword           continue
 394-395   punctuation               ;
 399-401   special_keyword           if
 402-403   punctuation               (
 403-404   operator                  !
 406-407   punctuation               )
 408-413   special_keyword           break
 413-414   punctuation               ;
 418-422   keyword                   this
 422-423   punctuation               .
 423-438   function                  #private_method
 438-439   punctuation               (
 440-441   punctuation               ,
 444-445   punctuation               )
 445-446   punctuation               ;
 449-450   punctuation               }
 453-459   comment                   // foo
 461-462   punctuation               }
 462-463   punctuation               ;
 466-481   function                  #private_method
 481-482   punctuation               (
 484-485   operator                  :
 486-492   builtin                   number
 492-493   punctuation               ,
 496-497   operator                  :
 498-501   builtin                   any
 501-502   punctuation               )
 503-504   punctuation               {
 507-512   special_keyword           throw
 513-516   keyword                   new
 517-522   class_name                Error
 522-523   punctuation               (
 523-570   template_string           `${this.d1} \n\t\t\tmultiline\n\t\t\tetc ${a2 + c2}\n\t\t`
 523-524   template_punctuation      `
 524-534   interpolation             ${this.d1}
 524-526   interpolation_punctuation ${
 526-530   keyword                   this
 530-531   punctuation               .
 533-534   interpolation_punctuation }
 534-556   string                     \n\t\t\tmultiline\n\t\t\tetc 
 556-566   interpolation             ${a2 + c2}
 556-558   interpolation_punctuation ${
 561-562   operator                  +
 565-566   interpolation_punctuation }
 566-569   string                    \n\t\t
 569-570   template_punctuation      `
 570-571   punctuation               )
 571-572   punctuation               ;
 574-575   punctuation               }
 578-587   keyword                   protected
 588-593   keyword                   async
 594-610   function                  protected_method
 610-611   punctuation               (
 611-612   punctuation               )
 612-613   operator                  :
 614-621   builtin                   Promise
 621-622   operator                  <
 622-626   keyword                   void
 626-627   operator                  >
 628-629   punctuation               {
 632-635   special_keyword           try
 636-637   punctuation               {
 641-646   special_keyword           await
 647-650   keyword                   new
 651-658   class_name                Promise
 651-658   builtin                   Promise
 658-659   punctuation               (
 659-660   punctuation               (
 667-668   punctuation               )
 669-671   operator                  =>
 672-682   function                  setTimeout
 682-683   punctuation               (
 690-691   punctuation               ,
 692-695   number                    100
 695-696   punctuation               )
 696-697   punctuation               )
 697-698   punctuation               ;
 702-704   special_keyword           if
 705-706   punctuation               (
 710-711   punctuation               .
 711-717   function                  random
 717-718   punctuation               (
 718-719   punctuation               )
 720-721   operator                  >
 722-725   number                    0.5
 725-726   punctuation               )
 727-728   punctuation               {
 733-740   builtin                   console
 740-741   punctuation               .
 741-744   function                  log
 744-745   punctuation               (
 745-748   keyword                   new
 749-753   class_name                Date
 753-754   punctuation               (
 754-755   punctuation               )
 755-756   punctuation               )
 756-757   punctuation               ;
 758-791   comment                   // eslint-disable-line no-console
 795-796   punctuation               }
 797-801   special_keyword           else
 802-804   special_keyword           if
 805-806   punctuation               (
 810-811   punctuation               .
 811-817   function                  random
 817-818   punctuation               (
 818-819   punctuation               )
 820-821   operator                  >
 822-825   number                    0.2
 825-826   punctuation               )
 827-828   punctuation               {
 833-840   builtin                   console
 840-841   punctuation               .
 841-844   function                  log
 844-845   punctuation               (
 845-861   string                    'else if branch'
 861-862   punctuation               )
 862-863   punctuation               ;
 867-868   punctuation               }
 869-873   special_keyword           else
 874-875   punctuation               {
 880-887   builtin                   console
 887-888   punctuation               .
 888-891   function                  log
 891-892   punctuation               (
 892-905   string                    'else branch'
 905-906   punctuation               )
 906-907   punctuation               ;
 911-912   punctuation               }
 915-916   punctuation               }
 917-922   special_keyword           catch
 923-924   punctuation               (
 929-930   punctuation               )
 931-932   punctuation               {
 936-943   builtin                   console
 943-944   punctuation               .
 944-949   function                  error
 949-950   punctuation               (
 955-956   punctuation               )
 956-957   punctuation               ;
 960-961   punctuation               }
 962-969   special_keyword           finally
 970-971   punctuation               {
 975-982   builtin                   console
 982-983   punctuation               .
 983-986   function                  log
 986-987   punctuation               (
 987-1002  string                    'finally block'
1002-1003  punctuation               )
1003-1004  punctuation               ;
1007-1008  punctuation               }
1010-1011  punctuation               }
1012-1013  punctuation               }
1015-1025  comment                   // comment
1027-1070  comment                   /*\nother comment\n\nconst comment = false;\n*/
1072-1096  comment                   /**\n * JSDoc comment\n */
1098-1104  special_keyword           import
1105-1106  punctuation               {
1118-1119  punctuation               ,
1120-1124  keyword                   type
1125-1136  class_name                Code_Sample
1136-1137  punctuation               ,
1138-1142  keyword                   type
1143-1154  class_name                Sample_Lang
1154-1155  punctuation               }
1156-1160  special_keyword           from
1161-1180  string                    '../code_sample.js'
1180-1181  punctuation               ;
1182-1188  special_keyword           import
1189-1190  operator                  *
1191-1193  special_keyword           as
1194-1195  constant                  A
1196-1200  special_keyword           from
1201-1220  string                    '../code_sample.js'
1220-1221  punctuation               ;
1236-1238  special_keyword           as
1239-1246  builtin                   unknown
1247-1249  special_keyword           as
1262-1264  special_keyword           as
1265-1268  builtin                   any
1269-1271  special_keyword           as
1283-1284  punctuation               ;
1286-1292  special_keyword           export
1293-1294  punctuation               {
1295-1296  punctuation               ,
1297-1298  constant                  A
1298-1299  punctuation               ,
1301-1302  punctuation               ,
1304-1305  punctuation               ,
1306-1307  constant                  D
1307-1308  punctuation               }
1308-1309  punctuation               ;
1311-1317  special_keyword           export
1318-1327  keyword                   interface
1328-1334  class_name                Some_E
1335-1336  punctuation               {
1342-1343  operator                  :
1344-1350  builtin                   string
1350-1351  punctuation               ;
1356-1357  operator                  :
1358-1364  builtin                   number
1364-1365  punctuation               ;
1366-1367  punctuation               }
1369-1375  special_keyword           export
1376-1381  keyword                   const
1388-1389  operator                  :
1397-1398  operator                  =
1399-1400  punctuation               {
1404-1405  operator                  :
1406-1413  string                    'A. H.'
1413-1414  punctuation               ,
1418-1419  operator                  :
1420-1423  number                    100
1423-1424  punctuation               }
1424-1425  punctuation               ;
1427-1433  special_keyword           export
1434-1442  keyword                   function
1443-1446  function                  add
1446-1447  punctuation               (
1448-1449  operator                  :
1450-1456  builtin                   number
1456-1457  punctuation               ,
1459-1460  operator                  :
1461-1467  builtin                   number
1467-1468  punctuation               )
1468-1469  operator                  :
1470-1476  builtin                   number
1477-1478  punctuation               {
1480-1486  special_keyword           return
1489-1490  operator                  +
1492-1493  punctuation               ;
1494-1495  punctuation               }
1497-1503  special_keyword           export
1504-1509  keyword                   const
1515-1516  operator                  =
1517-1518  punctuation               (
1519-1520  operator                  :
1521-1524  builtin                   any
1524-1525  punctuation               ,
1527-1528  operator                  :
1529-1532  builtin                   any
1532-1533  punctuation               )
1533-1534  operator                  :
1535-1538  builtin                   any
1539-1541  operator                  =>
1544-1545  operator                  +
1547-1548  punctuation               ;
1550-1572  comment                   // boundary test cases
1573-1579  special_keyword           export
1580-1585  keyword                   const
1604-1605  operator                  =
1606-1635  string                    'const class function string'
1635-1636  punctuation               ;
1637-1643  special_keyword           export
1644-1649  keyword                   const
1667-1668  operator                  =
1669-1695  string                    '// this is not a comment'
1695-1696  punctuation               ;
1697-1703  special_keyword           export
1704-1709  keyword                   const
1729-1730  operator                  =
1731-1748  template_string           `Value: ${1 + 2}`
1731-1732  template_punctuation      `
1732-1739  string                    Value: 
1739-1747  interpolation             ${1 + 2}
1739-1741  interpolation_punctuation ${
1741-1742  number                    1
1743-1744  operator                  +
1745-1746  number                    2
1746-1747  interpolation_punctuation }
1747-1748  template_punctuation      `
1748-1749  punctuation               ;
1751-1783  comment                   // regex that looks like comment
1784-1790  special_keyword           export
1791-1796  keyword                   const
1803-1804  operator                  =
1805-1814  regex                     /\/\/.*/g
1805-1806  regex_delimiter           /
1806-1812  regex_source              \/\/.*
1812-1813  regex_delimiter           /
1813-1814  regex_flags               g
1814-1815  punctuation               ;
1816-1822  special_keyword           export
1823-1828  keyword                   const
1843-1844  operator                  =
1845-1877  regex                     /^(?:\/\*.*?\*\/|\/\/.*|[^/])+$/
1845-1846  regex_delimiter           /
1846-1876  regex_source              ^(?:\/\*.*?\*\/|\/\/.*|[^/])+$
1876-1877  regex_delimiter           /
1877-1878  punctuation               ;
1880-1936  comment                   // string in comment should not be highlighted as string
1937-1988  comment                   // const commented = "this string is in a comment";

=== STATS ===
Total tokens: 392
Sample length: 1989 characters

Token types:
  punctuation: 152
  operator: 53
  special_keyword: 37
  keyword: 32
  builtin: 23
  string: 16
  function: 15
  number: 10
  comment: 10
  class_name: 8
  interpolation_punctuation: 8
  template_punctuation: 6
  constant: 4
  interpolation: 4
  regex_delimiter: 4
  template_string: 3
  boolean: 2
  regex: 2
  regex_source: 2
  regex_flags: 1
